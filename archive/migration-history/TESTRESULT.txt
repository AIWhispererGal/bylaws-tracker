mgall@mother:/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized$ npm test

> bylaws-amendment-tracker@1.0.0 test
> jest

 PASS  tests/unit/user-management.test.js (5.004 s)
  User Management Tests
    User Creation
      ✓ should create new user successfully (34 ms)
      ✓ should handle user creation errors
      ✓ should include user metadata (1 ms)
    Organization Membership
      ✓ should add user to organization (1 ms)
      ✓ should add user with specific role
      ✓ should handle duplicate membership errors (1 ms)
      ✓ should set is_active to true by default
    Role Management
      ✓ should update user role (1 ms)
      ✓ should validate role names (1 ms)
      ✓ should check role hierarchy permissions (1 ms)
      ✓ should prevent unauthorized role changes
      ✓ should allow equal or lower role management (1 ms)
    User Removal
      ✓ should remove user from organization
      ✓ should soft delete by setting is_active to false (1 ms)
      ✓ should handle removal errors
    User Queries
      ✓ should get all users for organization (1 ms)
      ✓ should get user organizations
      ✓ should return empty array for users with no organizations
      ✓ should filter out inactive memberships (5 ms)
    Permission Checks
      ✓ should validate admin can manage members
      ✓ should validate committee chair can manage members
      ✓ should prevent members from managing admins (1 ms)
      ✓ should validate global admin can manage all roles
    Edge Cases
      ✓ should handle null user IDs (1 ms)
      ✓ should handle null organization IDs
      ✓ should handle concurrent role updates

 PASS  tests/security/rls-policies.test.js (5.009 s)
  RLS Policy Tests
    Organization Isolation
      ✓ should allow user to see only their organization (37 ms)
      ✓ should allow global admin to see all organizations (1 ms)
      ✓ should prevent unauthenticated access to organizations (1 ms)
    Document Isolation
      ✓ should isolate documents by organization (1 ms)
      ✓ should prevent cross-organization document access
      ✓ should allow global admin to access all documents
    Section Isolation
      ✓ should isolate sections by organization (1 ms)
      ✓ should prevent unauthorized section modifications (1 ms)
    Suggestion Isolation
      ✓ should isolate suggestions by organization (1 ms)
      ✓ should prevent cross-organization suggestion access (1 ms)
    User Membership Policies
      ✓ should allow users to see their own memberships (1 ms)
      ✓ should prevent users from seeing other users memberships (1 ms)
      ✓ should allow global admin to see all memberships
    Section Lock Policies
      ✓ should isolate section locks by organization (1 ms)
    Permission Boundary Tests
      ✓ should enforce strict organization boundaries (6 ms)
      ✓ should prevent privilege escalation attempts (1 ms)
      ✓ should validate organization context for all operations
    Global Admin Override
      ✓ should allow global admin to bypass all organization restrictions (1 ms)
      ✓ should differentiate between global admin and org admin
    Security Edge Cases
      ✓ should handle null organization_id
      ✓ should handle undefined organization_id (1 ms)
      ✓ should require authentication for all operations
      ✓ should handle concurrent multi-tenant queries

 FAIL  tests/integration/api.test.js
  API Integration Tests
    Section Management API
      ✓ should fetch all sections for a document (36 ms)
      ✓ should create new section (1 ms)
      ✓ should lock section with suggestion (1 ms)
      ✓ should unlock section
    Multi-Section API
      ✓ should lock multiple sections atomically
      ✕ should fetch suggestions for multiple sections (1 ms)
    Suggestion Management API
      ✓ should create single-section suggestion (1 ms)
      ✓ should create multi-section suggestion
      ✓ should update suggestion (1 ms)
      ✓ should delete suggestion (1 ms)
      ✓ should get suggestions for a section (1 ms)
    Export API
      ✓ should export committee selections
      ✓ should export board approvals
    Document Initialization API
      ✓ should initialize document with sections (1 ms)
    Error Handling
      ✓ should handle invalid section ID gracefully
      ✓ should validate multi-section requests
      ✓ should prevent locking already locked sections (1 ms)
    Workflow Integration
      ✓ should complete full amendment workflow (1 ms)

  ● API Integration Tests › Multi-Section API › should fetch suggestions for multiple sections

    TypeError: Cannot read properties of undefined (reading 'full_coverage')

      152 |
      153 |       expect(response.data.success).toBe(true);
    > 154 |       expect(response.data.suggestions.full_coverage).toHaveLength(1);
          |                                        ^
      155 |     });
      156 |   });
      157 |

      at Object.full_coverage (tests/integration/api.test.js:154:40)

 PASS  tests/unit/configuration.test.js (5.269 s)
  Configuration System
    Configuration Loading
      ✓ should load configuration from object (67 ms)
      ✓ should provide default values for missing keys
      ✓ should load from environment variables
    Configuration Validation
      ✓ should validate required fields (1 ms)
      ✓ should throw error for missing required fields (114 ms)
      ✓ should validate workflow stages structure (1 ms)
      ✓ should reject invalid workflow stages (1 ms)
      ✓ should enforce stage count limits
    Workflow Configuration
      ✓ should support 1 stage workflow
      ✓ should support 2 stage workflow (committee/board) (1 ms)
      ✓ should support 5 stage workflow (7 ms)
      ✓ should support custom stage names
    Organization-Specific Configuration
      ✓ should configure neighborhood council workflow (1 ms)
      ✓ should configure corporate governance workflow
      ✓ should configure academic policy workflow (1 ms)
    Dynamic Configuration Updates
      ✓ should allow runtime configuration changes
      ✓ should support configuration merging (1 ms)
    Configuration Persistence
      ✓ should serialize configuration to JSON
      ✓ should support configuration versioning
    Hierarchy Configuration
      ✓ should configure custom hierarchy labels
      ✓ should configure numbering schemes

 PASS  tests/e2e/admin-flow.test.js (5.27 s)
  End-to-End Admin Flow Tests
    Admin Login and Dashboard Access
      ✓ should complete full admin login flow (34 ms)
      ✓ should prevent non-admin from accessing admin dashboard (1 ms)
      ✓ should require authentication for admin routes (1 ms)
    Complete Approval Workflow E2E
      ✓ should complete full approval workflow (1 ms)
      ✓ should handle rejection workflow
    Multi-Section Approval Workflow E2E
      ✓ should approve multiple sections together
      ✓ should rollback if multi-section lock fails
    Admin Organization Management E2E
      ✓ should view and manage organizations (1 ms)
      ✓ should switch between organizations (2 ms)
    User Management E2E
      ✓ should manage users across organizations (8 ms)
    Export and Reporting E2E
      ✓ should export committee selections (1 ms)
      ✓ should export board approvals (1 ms)
      ✓ should generate approval history report (1 ms)
    Error Handling and Edge Cases
      ✓ should handle session expiration gracefully
      ✓ should prevent concurrent conflicting operations (1 ms)
      ✓ should validate permissions for each operation (1 ms)
    Performance and Load Testing
      ✓ should handle multiple concurrent user sessions (2 ms)
      ✓ should handle rapid approval workflow iterations
    Security Testing
      ✓ should prevent SQL injection in queries
      ✓ should prevent XSS in suggestion text (1 ms)
      ✓ should enforce CSRF protection

 FAIL  tests/unit/dashboard-ui.test.js (5.245 s)
  Dashboard UI/UX Tests
    Dashboard Rendering
      ✓ should render dashboard with organization name (36 ms)
      ✓ should render sections list (1 ms)
      ✓ should render statistics cards (1 ms)
      ✓ should render empty state when no sections (1 ms)
      ✓ should render section with locked indicator (1 ms)
      ✓ should render section with suggestion count badge (1 ms)
    Navigation Functionality
      ✓ should navigate to section details (1 ms)
      ✓ should navigate to upload page
      ✓ should navigate to settings (1 ms)
      ✓ should handle back navigation (1 ms)
    Responsive Design
      ✓ should adapt layout for mobile (1 ms)
      ✓ should show hamburger menu on mobile (8 ms)
      ✓ should adjust font sizes for readability
    Error States
      ✓ should display error message when data load fails
      ✓ should show loading spinner during data fetch (1 ms)
      ✓ should handle network timeout gracefully
      ✓ should show session expired message (1 ms)
    Loading States
      ✓ should show skeleton loaders for sections
      ✓ should show progressive loading for large datasets (1 ms)
      ✓ should debounce search input (1 ms)
    User Interactions
      ✓ should handle section selection
      ✓ should handle bulk selection (1 ms)
      ✕ should filter sections by search query (2 ms)
      ✓ should sort sections by different criteria (5 ms)
      ✓ should paginate large result sets
    Accessibility
      ✓ should provide aria labels for interactive elements (1 ms)
      ✓ should support keyboard navigation
      ✓ should provide screen reader announcements
      ✓ should have sufficient color contrast
    Performance Optimization
      ✓ should virtualize long lists
      ✓ should lazy load images
      ✓ should memoize expensive calculations (1 ms)

  ● Dashboard UI/UX Tests › User Interactions › should filter sections by search query

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 3
    Received array:  [{"section_citation": "Article I, Section 1", "section_title": "Purpose"}, {"section_citation": "Article I, Section 2", "section_title": "Boundaries"}, {"section_citation": "Article II, Section 1", "section_title": "Meetings"}]

      427 |       const result = filterSections(sections, 'article i');
      428 |
    > 429 |       expect(result).toHaveLength(2);
          |                      ^
      430 |       expect(result.every(s => s.section_citation.startsWith('Article I'))).toBe(true);
      431 |     });
      432 |

      at Object.toHaveLength (tests/unit/dashboard-ui.test.js:429:22)

 FAIL  tests/unit/dashboard.test.js (5.382 s)
  Dashboard Unit Tests
    Setup Status Check
      ✕ should detect configured organization (41 ms)
      ✕ should detect unconfigured system
      ✕ should handle database errors gracefully
      ✓ should cache setup status in session (2 ms)
    Organization ID Filtering
      ✓ should filter sections by organization_id (2 ms)
      ✓ should filter suggestions by organization_id (1 ms)
      ✓ should prevent accessing other organization data (2 ms)
    Dashboard Route Handler
      ✕ should render dashboard with organization data (3 ms)
      ✓ should handle missing organization_id in session (7 ms)
      ✕ should handle database errors gracefully (1 ms)
    Query Performance
      ✓ should use efficient queries with proper indexes (1 ms)
      ✓ should limit query results appropriately (1 ms)
    Error Handling
      ✓ should handle null organization_id (45 ms)
      ✓ should handle undefined session
      ✓ should handle malformed organization_id (1 ms)
    Data Transformation
      ✓ should format sections for dashboard display (1 ms)
      ✓ should calculate section statistics
    Session Management
      ✓ should validate session before dashboard access
      ✓ should redirect to setup without session (1 ms)
      ✓ should cache organization config in session

  ● Dashboard Unit Tests › Setup Status Check › should detect configured organization

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      53 |   describe('Setup Status Check', () => {
      54 |     test('should detect configured organization', async () => {
    > 55 |       mockSupabaseService.single.mockResolvedValue({
         |                                  ^
      56 |         data: { id: 'org-123', name: 'Test Org' },
      57 |         error: null
      58 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:55:34)

  ● Dashboard Unit Tests › Setup Status Check › should detect unconfigured system

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      75 |
      76 |     test('should detect unconfigured system', async () => {
    > 77 |       mockSupabaseService.single.mockResolvedValue({
         |                                  ^
      78 |         data: null,
      79 |         error: null
      80 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:77:34)

  ● Dashboard Unit Tests › Setup Status Check › should handle database errors gracefully

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

       96 |
       97 |     test('should handle database errors gracefully', async () => {
    >  98 |       mockSupabaseService.single.mockResolvedValue({
          |                                  ^
       99 |         data: null,
      100 |         error: { message: 'Connection failed' }
      101 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:98:34)

  ● Dashboard Unit Tests › Dashboard Route Handler › should render dashboard with organization data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "dashboard", ObjectContaining {"organizationId": "org-123"}

    Number of calls: 0

      244 |       await dashboardHandler(req, res);
      245 |
    > 246 |       expect(res.render).toHaveBeenCalledWith('dashboard', expect.objectContaining({
          |                          ^
      247 |         organizationId: 'org-123'
      248 |       }));
      249 |     });

      at Object.toHaveBeenCalledWith (tests/unit/dashboard.test.js:246:26)

  ● Dashboard Unit Tests › Dashboard Route Handler › should handle database errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 500

    Number of calls: 0

      289 |       await dashboardHandler(req, res);
      290 |
    > 291 |       expect(res.status).toHaveBeenCalledWith(500);
          |                          ^
      292 |       expect(res.json).toHaveBeenCalledWith({ error: 'Database error' });
      293 |     });
      294 |   });

      at Object.toHaveBeenCalledWith (tests/unit/dashboard.test.js:291:26)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at Object.isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:83:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at Object.isGlobalAdmin (tests/unit/roleAuth.test.js:83:28)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at Object.isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:93:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at Object.isGlobalAdmin (tests/unit/roleAuth.test.js:93:28)

  console.error
    Error checking global admin status: Error: Database connection failed
        at Object.maybeSingle (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:129:32)
        at maybeSingle (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:24:8)
        at Object.isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:140:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      25 |
      26 |     if (error) {
    > 27 |       console.error('Error checking global admin status:', error);
         |               ^
      28 |       return false;
      29 |     }
      30 |

      at error (src/middleware/globalAdmin.js:27:15)
      at Object.<anonymous> (tests/unit/roleAuth.test.js:140:22)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:157:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:157:28)

 FAIL  tests/setup/setup-middleware.test.js (6.194 s)
  Setup Middleware
    requireSetupComplete
      ✕ should redirect to /setup if not configured (65 ms)
      ✕ should allow access if configured (1 ms)
      ✕ should always allow /setup routes
      ✕ should allow access to public assets
      ✕ should allow health check endpoint
      ✕ should protect API routes if not configured
    preventSetupIfConfigured
      ✕ should redirect to dashboard if already configured (1 ms)
      ✕ should allow setup access if not configured
      ✕ should not affect non-setup routes (1 ms)
    checkSetupStatus
      ✕ should return false if organization table does not exist (1 ms)
      ✕ should return false if no organization exists
      ✕ should return true if organization is configured
      ✕ should handle database errors gracefully (1 ms)
    initializeSetupStatus
      ✕ should set app.locals.isConfigured to true if configured
      ✕ should set app.locals.isConfigured to false if not configured

  ● Setup Middleware › requireSetupComplete › should redirect to /setup if not configured

    TypeError: requireSetupComplete is not a function

      50 |             const next = createMockNext();
      51 |
    > 52 |             requireSetupComplete(req, res, next);
         |             ^
      53 |
      54 |             expect(res.redirected).toBe(true);
      55 |             expect(res.redirectPath).toBe('/setup');

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:52:13)

  ● Setup Middleware › requireSetupComplete › should allow access if configured

    TypeError: requireSetupComplete is not a function

      62 |             const next = createMockNext();
      63 |
    > 64 |             requireSetupComplete(req, res, next);
         |             ^
      65 |
      66 |             expect(res.redirected).toBe(false);
      67 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:64:13)

  ● Setup Middleware › requireSetupComplete › should always allow /setup routes

    TypeError: requireSetupComplete is not a function

      73 |             const next = createMockNext();
      74 |
    > 75 |             requireSetupComplete(req, res, next);
         |             ^
      76 |
      77 |             expect(res.redirected).toBe(false);
      78 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:75:13)

  ● Setup Middleware › requireSetupComplete › should allow access to public assets

    TypeError: requireSetupComplete is not a function

      87 |                 const next = createMockNext();
      88 |
    > 89 |                 requireSetupComplete(req, res, next);
         |                 ^
      90 |
      91 |                 expect(res.redirected).toBe(false);
      92 |                 expect(next.called()).toBe(true);

      at requireSetupComplete (tests/setup/setup-middleware.test.js:89:17)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/setup/setup-middleware.test.js:84:25)

  ● Setup Middleware › requireSetupComplete › should allow health check endpoint

    TypeError: requireSetupComplete is not a function

       99 |             const next = createMockNext();
      100 |
    > 101 |             requireSetupComplete(req, res, next);
          |             ^
      102 |
      103 |             expect(res.redirected).toBe(false);
      104 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:101:13)

  ● Setup Middleware › requireSetupComplete › should protect API routes if not configured

    TypeError: requireSetupComplete is not a function

      110 |             const next = createMockNext();
      111 |
    > 112 |             requireSetupComplete(req, res, next);
          |             ^
      113 |
      114 |             expect(res.redirected).toBe(true);
      115 |             expect(res.redirectPath).toBe('/setup');

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:112:13)

  ● Setup Middleware › preventSetupIfConfigured › should redirect to dashboard if already configured

    TypeError: preventSetupIfConfigured is not a function

      123 |             const next = createMockNext();
      124 |
    > 125 |             preventSetupIfConfigured(req, res, next);
          |             ^
      126 |
      127 |             expect(res.redirected).toBe(true);
      128 |             expect(res.redirectPath).toBe('/dashboard');

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:125:13)

  ● Setup Middleware › preventSetupIfConfigured › should allow setup access if not configured

    TypeError: preventSetupIfConfigured is not a function

      135 |             const next = createMockNext();
      136 |
    > 137 |             preventSetupIfConfigured(req, res, next);
          |             ^
      138 |
      139 |             expect(res.redirected).toBe(false);
      140 |             expect(next.called()).toBe(true);

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:137:13)

  ● Setup Middleware › preventSetupIfConfigured › should not affect non-setup routes

    TypeError: preventSetupIfConfigured is not a function

      146 |             const next = createMockNext();
      147 |
    > 148 |             preventSetupIfConfigured(req, res, next);
          |             ^
      149 |
      150 |             expect(res.redirected).toBe(false);
      151 |             expect(next.called()).toBe(true);

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:148:13)

  ● Setup Middleware › checkSetupStatus › should return false if organization table does not exist

    TypeError: checkSetupStatus is not a function

      164 |             };
      165 |
    > 166 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      167 |             expect(result).toBe(false);
      168 |         });
      169 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:166:34)

  ● Setup Middleware › checkSetupStatus › should return false if no organization exists

    TypeError: checkSetupStatus is not a function

      178 |             };
      179 |
    > 180 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      181 |             expect(result).toBe(false);
      182 |         });
      183 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:180:34)

  ● Setup Middleware › checkSetupStatus › should return true if organization is configured

    TypeError: checkSetupStatus is not a function

      192 |             };
      193 |
    > 194 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      195 |             expect(result).toBe(true);
      196 |         });
      197 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:194:34)

  ● Setup Middleware › checkSetupStatus › should handle database errors gracefully

    TypeError: checkSetupStatus is not a function

      203 |             };
      204 |
    > 205 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      206 |             expect(result).toBe(false);
      207 |         });
      208 |     });

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:205:34)

  ● Setup Middleware › initializeSetupStatus › should set app.locals.isConfigured to true if configured

    TypeError: initializeSetupStatus is not a function

      220 |             };
      221 |
    > 222 |             const result = await initializeSetupStatus(mockApp, mockDb);
          |                                  ^
      223 |
      224 |             expect(result).toBe(true);
      225 |             expect(mockApp.locals.isConfigured).toBe(true);

      at Object.initializeSetupStatus (tests/setup/setup-middleware.test.js:222:34)

  ● Setup Middleware › initializeSetupStatus › should set app.locals.isConfigured to false if not configured

    TypeError: initializeSetupStatus is not a function

      232 |             };
      233 |
    > 234 |             const result = await initializeSetupStatus(mockApp, mockDb);
          |                                  ^
      235 |
      236 |             expect(result).toBe(false);
      237 |             expect(mockApp.locals.isConfigured).toBe(false);

      at Object.initializeSetupStatus (tests/setup/setup-middleware.test.js:234:34)

 PASS  tests/integration/migration.test.js
  Migration Tests
    Schema Migration
      ✓ should add organization_id to existing tables (2 ms)
      ✓ should create organizations table
    Data Preservation
      ✓ should preserve all existing sections
      ✓ should preserve section text content
      ✓ should migrate to default organization
    Migration Rollback
      ✓ should support rollback functionality
    Version Management
      ✓ should track migration version (1 ms)
      ✓ should run migrations in order
      ✓ should skip already applied migrations (1 ms)
    Data Integrity
      ✓ should maintain referential integrity (1 ms)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:172:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:172:28)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq is not a function
        at eq (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:20:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:200:28)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:200:28)

  console.error
    Error getting accessible organizations: TypeError: req.supabase.from(...).select(...).eq is not a function
        at eq (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:77:10)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at Object.<anonymous> (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:200:22)

      90 |     }
      91 |   } catch (error) {
    > 92 |     console.error('Error getting accessible organizations:', error);
         |             ^
      93 |     return [];
      94 |   }
      95 | }

      at error (src/middleware/globalAdmin.js:92:13)
      at Object.<anonymous> (tests/unit/roleAuth.test.js:200:22)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:102:31)
        at Object.attachGlobalAdminStatus (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:219:13)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:102:31)
      at Object.attachGlobalAdminStatus (tests/unit/roleAuth.test.js:219:13)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:103:41)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at Object.<anonymous> (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:219:7)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at getAccessibleOrganizations (src/middleware/globalAdmin.js:103:41)
      at Object.<anonymous> (tests/unit/roleAuth.test.js:219:7)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at Object.isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:295:29)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at Object.isGlobalAdmin (tests/unit/roleAuth.test.js:295:29)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at Object.isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:300:34)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at Object.isGlobalAdmin (tests/unit/roleAuth.test.js:300:34)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:314:26)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:314:26)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:377:26)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:377:26)

  console.error
    Error in isGlobalAdmin: TypeError: req.supabase.from(...).select(...).eq(...).eq(...).eq(...).limit is not a function
        at limit (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:23:8)
        at isGlobalAdmin (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/middleware/globalAdmin.js:52:27)
        at Object.getAccessibleOrganizations (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/roleAuth.test.js:398:26)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      31 |     return !!data;
      32 |   } catch (error) {
    > 33 |     console.error('Error in isGlobalAdmin:', error);
         |             ^
      34 |     return false;
      35 |   }
      36 | }

      at error (src/middleware/globalAdmin.js:33:13)
      at isGlobalAdmin (src/middleware/globalAdmin.js:52:27)
      at Object.getAccessibleOrganizations (tests/unit/roleAuth.test.js:398:26)

 PASS  tests/unit/hierarchyDetector.test.js
  Smart Hierarchy Detection Algorithm
    romanToArabic
      ✓ should convert basic Roman numerals (1 ms)
      ✓ should convert complex Roman numerals (1 ms)
      ✓ should handle lowercase Roman numerals (1 ms)
      ✓ should handle empty or null input
    letterToNumber
      ✓ should convert uppercase letters to numbers (1 ms)
      ✓ should convert lowercase letters to numbers (1 ms)
      ✓ should handle empty or null input
    parseNumberingStyle
      ✓ should parse Roman numeral uppercase (1 ms)
      ✓ should parse Roman numeral lowercase (1 ms)
      ✓ should parse Arabic numbers (1 ms)
      ✓ should parse uppercase letters
      ✓ should parse lowercase letters
      ✓ should parse decimal nested format (1 ms)
      ✓ should parse deeply nested decimal format (1 ms)
      ✓ should parse mixed format (1 ms)
      ✓ should parse parenthesized numbers (1 ms)
      ✓ should parse parenthesized letters (1 ms)
      ✓ should handle text without numbering
      ✓ should handle empty or null input
    detectHierarchyLevel
      ✓ should detect level from Roman numerals
      ✓ should detect level from Arabic numbers (1 ms)
      ✓ should detect level from letters (1 ms)
      ✓ should detect level from decimal nested format (1 ms)
      ✓ should adjust level based on indentation
      ✓ should detect level from heading style
      ✓ should detect level from font size (1 ms)
      ✓ should reduce level for bold text (1 ms)
      ✓ should cap level at 9
    buildSectionTree
      ✓ should build tree from simple hierarchy (2 ms)
      ✓ should build complex nested tree (1 ms)
      ✓ should handle empty input (1 ms)
      ✓ should track numbering patterns used (1 ms)
      ✓ should preserve node metadata (1 ms)
    validateNumberingSequence
      ✓ should validate correct sequence
      ✓ should detect sequence gaps (1 ms)
      ✓ should detect mixed numbering styles (1 ms)
      ✓ should handle empty input
      ✓ should handle nodes without numbering
    getSectionPath
      ✓ should find path to nested node (1 ms)
      ✓ should return empty path if node not found (1 ms)
      ✓ should find root level node (1 ms)
    Edge Cases and Complex Patterns
      ✓ should handle skipped numbering (I, II, IV) (1 ms)
      ✓ should handle multiple formats in same document (3 ms)
      ✓ should handle unnumbered sections with style
      ✓ should distinguish section titles from content (1 ms)
      ✓ should handle 10-level deep hierarchy (1 ms)
    Real-World Bylaw Pattern
      ✓ should handle typical bylaw structure (2 ms)

 FAIL  tests/unit/roleAuth.test.js (6.737 s)
  Role Authorization Tests
    isGlobalAdmin
      ✕ should return true for global admin user (1265 ms)
      ✓ should return false for non-admin user (17 ms)
      ✓ should return false when no session exists
      ✓ should return false when userId is missing (1 ms)
      ✓ should handle database errors gracefully (15 ms)
    getAccessibleOrganizations
      ✕ should return all organizations for global admin (19 ms)
      ✕ should return only user organizations for regular user (21 ms)
      ✓ should return empty array when no session
      ✓ should handle database errors gracefully (29 ms)
    attachGlobalAdminStatus middleware
      ✕ should attach admin status and organizations to request (35 ms)
      ✓ should set defaults when no session exists (1 ms)
    requireGlobalAdmin middleware
      ✓ should allow access for global admin
      ✓ should deny access for non-admin user (2 ms)
      ✓ should deny access when isGlobalAdmin is undefined (1 ms)
    Permission Boundary Tests
      ✓ should prevent privilege escalation (32 ms)
      ✕ should enforce organization access control (15 ms)
      ✓ should validate admin status on every request
    Role-Based Access Control
      ✕ should differentiate between admin and member roles (16 ms)
      ✕ should handle multiple roles across organizations (22 ms)

  ● Role Authorization Tests › isGlobalAdmin › should return true for global admin user

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      82 |
      83 |       const result = await isGlobalAdmin(req);
    > 84 |       expect(result).toBe(true);
         |                      ^
      85 |     });
      86 |
      87 |     test('should return false for non-admin user', async () => {

      at Object.toBe (tests/unit/roleAuth.test.js:84:22)

  ● Role Authorization Tests › getAccessibleOrganizations › should return all organizations for global admin

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      156 |
      157 |       const result = await getAccessibleOrganizations(req);
    > 158 |       expect(result).toHaveLength(2);
          |                      ^
      159 |       expect(result[0].name).toBe('Org A');
      160 |     });
      161 |

      at Object.toHaveLength (tests/unit/roleAuth.test.js:158:22)

  ● Role Authorization Tests › getAccessibleOrganizations › should return only user organizations for regular user

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      171 |
      172 |       const result = await getAccessibleOrganizations(req);
    > 173 |       expect(result).toHaveLength(1);
          |                      ^
      174 |       expect(result[0].name).toBe('My Org');
      175 |       expect(result[0].role).toBe('admin');
      176 |     });

      at Object.toHaveLength (tests/unit/roleAuth.test.js:173:22)

  ● Role Authorization Tests › attachGlobalAdminStatus middleware › should attach admin status and organizations to request

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      219 |       await attachGlobalAdminStatus(req, {}, next);
      220 |
    > 221 |       expect(req.isGlobalAdmin).toBe(true);
          |                                 ^
      222 |       expect(req.accessibleOrganizations).toHaveLength(1);
      223 |       expect(nextCalled).toBe(true);
      224 |     });

      at Object.toBe (tests/unit/roleAuth.test.js:221:33)

  ● Role Authorization Tests › Permission Boundary Tests › should enforce organization access control

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      314 |       const orgs = await getAccessibleOrganizations(req);
      315 |
    > 316 |       expect(orgs).toHaveLength(1);
          |                    ^
      317 |       expect(orgs.find(o => o.id === '999')).toBeUndefined();
      318 |     });
      319 |

      at Object.toHaveLength (tests/unit/roleAuth.test.js:316:20)

  ● Role Authorization Tests › Role-Based Access Control › should differentiate between admin and member roles

    TypeError: Cannot read properties of undefined (reading 'role')

      380 |       const memberOrg = orgs.find(o => o.id === '2');
      381 |
    > 382 |       expect(adminOrg.role).toBe('admin');
          |                       ^
      383 |       expect(memberOrg.role).toBe('member');
      384 |     });
      385 |

      at Object.role (tests/unit/roleAuth.test.js:382:23)

  ● Role Authorization Tests › Role-Based Access Control › should handle multiple roles across organizations

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      398 |       const orgs = await getAccessibleOrganizations(req);
      399 |
    > 400 |       expect(orgs).toHaveLength(3);
          |                    ^
      401 |       expect(orgs.map(o => o.role)).toEqual(['admin', 'member', 'reviewer']);
      402 |     });
      403 |   });

      at Object.toHaveLength (tests/unit/roleAuth.test.js:400:20)

  console.error
    Error counting suggestions: Error: Database error
        at Object.<anonymous> (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/suggestion-count.test.js:190:33)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      22 |       return count || 0;
      23 |     } catch (error) {
    > 24 |       console.error('Error counting suggestions:', error);
         |               ^
      25 |       return 0;
      26 |     }
      27 |   }

      at SuggestionCountService.error [as getSuggestionCount] (tests/unit/suggestion-count.test.js:24:15)
      at Object.<anonymous> (tests/unit/suggestion-count.test.js:194:21)

 FAIL  tests/security/rls-dashboard.test.js (6.764 s)
  RLS Dashboard Security Tests
    Organization Data Isolation
      ✓ should enforce RLS on bylaw_sections (78 ms)
      ✕ should block access to other organization sections (2 ms)
      ✓ should enforce RLS on bylaw_suggestions (1 ms)
      ✓ should enforce RLS on organizations table (1 ms)
      ✓ should prevent viewing other organization details (1 ms)
    Unauthorized Access Attempts
      ✕ should block INSERT without organization_id (1 ms)
      ✕ should block INSERT with wrong organization_id (1 ms)
      ✕ should block UPDATE of other organization data (1 ms)
      ✕ should block DELETE of other organization data (1 ms)
      ✕ should prevent SQL injection through organization_id (5 ms)
    RLS Policy Enforcement
      ✕ should apply SELECT policy for authenticated users (1 ms)
      ✓ should apply INSERT policy for authenticated users (1 ms)
      ✓ should apply UPDATE policy for authenticated users
      ✓ should apply DELETE policy for authenticated users
    Service Role vs User Role
      ✕ service role should bypass RLS for all organizations (1 ms)
      ✕ user role should only see own organization
      ✓ service role should be used only for setup
      ✓ service role should not be exposed to client (1 ms)
    RLS Edge Cases
      ✕ should handle NULL organization_id
      ✓ should handle concurrent transactions with RLS
      ✕ should handle RLS with JOIN queries
      ✓ should handle RLS with aggregate queries (1 ms)
    Security Best Practices
      ✓ should always include organization_id in WHERE clause
      ✓ should validate organization_id from session, not client (1 ms)
      ✕ should use prepared statements to prevent injection
      ✓ should log security violations (1 ms)
      ✓ should rate limit suspicious activity

  ● RLS Dashboard Security Tests › Organization Data Isolation › should block access to other organization sections

    expect(received).toBeDefined()

    Received: undefined

      65 |
      66 |       // RLS policy should filter this out
    > 67 |       expect(data).toBeDefined();
         |                    ^
      68 |     });
      69 |
      70 |     test('should enforce RLS on bylaw_suggestions', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:67:20)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block INSERT without organization_id

    expect(received).toBeDefined()

    Received: undefined

      135 |         });
      136 |
    > 137 |       expect(error).toBeDefined();
          |                     ^
      138 |       expect(error.message).toContain('organization_id');
      139 |     });
      140 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:137:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block INSERT with wrong organization_id

    expect(received).toBeDefined()

    Received: undefined

      154 |         });
      155 |
    > 156 |       expect(error).toBeDefined();
          |                     ^
      157 |     });
      158 |
      159 |     test('should block UPDATE of other organization data', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:156:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block UPDATE of other organization data

    expect(received).toBeDefined()

    Received: undefined

      168 |         .eq('organization_id', 'org-2'); // Not user's org
      169 |
    > 170 |       expect(error).toBeDefined();
          |                     ^
      171 |     });
      172 |
      173 |     test('should block DELETE of other organization data', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:170:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block DELETE of other organization data

    expect(received).toBeDefined()

    Received: undefined

      182 |         .eq('organization_id', 'org-2');
      183 |
    > 184 |       expect(error).toBeDefined();
          |                     ^
      185 |     });
      186 |
      187 |     test('should prevent SQL injection through organization_id', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:184:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should prevent SQL injection through organization_id

    expect(received).toBeDefined()

    Received: undefined

      199 |
      200 |       // Should safely handle malicious input
    > 201 |       expect(data).toBeDefined();
          |                    ^
      202 |       expect(Array.isArray(data)).toBe(true);
      203 |     });
      204 |   });

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:201:20)

  ● RLS Dashboard Security Tests › RLS Policy Enforcement › should apply SELECT policy for authenticated users

    TypeError: Cannot read properties of undefined (reading 'every')

      224 |
      225 |       expect(result.success).toBe(true);
    > 226 |       expect(result.data.every(s => s.organization_id === 'org-1')).toBe(true);
          |                          ^
      227 |     });
      228 |
      229 |     test('should apply INSERT policy for authenticated users', async () => {

      at Object.every (tests/security/rls-dashboard.test.js:226:26)

  ● RLS Dashboard Security Tests › Service Role vs User Role › service role should bypass RLS for all organizations

    expect(received).toBeDefined()

    Received: undefined

      322 |
      323 |       // Service role sees all orgs
    > 324 |       expect(data).toBeDefined();
          |                    ^
      325 |       expect(data.length).toBeGreaterThan(1);
      326 |     });
      327 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:324:20)

  ● RLS Dashboard Security Tests › Service Role vs User Role › user role should only see own organization

    expect(received).toBeDefined()

    Received: undefined

      340 |         .eq('organization_id', 'org-1');
      341 |
    > 342 |       expect(data).toBeDefined();
          |                    ^
      343 |       expect(data.every(s => s.organization_id === 'org-1')).toBe(true);
      344 |     });
      345 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:342:20)

  ● RLS Dashboard Security Tests › RLS Edge Cases › should handle NULL organization_id

    expect(received).toBeDefined()

    Received: undefined

      400 |
      401 |       // RLS should block records with NULL organization_id
    > 402 |       expect(data).toBeDefined();
          |                    ^
      403 |       expect(Array.isArray(data)).toBe(true);
      404 |     });
      405 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:402:20)

  ● RLS Dashboard Security Tests › RLS Edge Cases › should handle RLS with JOIN queries

    expect(received).toBeDefined()

    Received: undefined

      446 |         .eq('organization_id', 'org-1');
      447 |
    > 448 |       expect(data).toBeDefined();
          |                    ^
      449 |       // Both tables should enforce RLS
      450 |     });
      451 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:448:20)

  ● RLS Dashboard Security Tests › Security Best Practices › should use prepared statements to prevent injection

    expect(received).toBeDefined()

    Received: undefined

      509 |
      510 |       // Should safely handle malicious input
    > 511 |       expect(data).toBeDefined();
          |                    ^
      512 |       expect(Array.isArray(data)).toBe(true);
      513 |     });
      514 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:511:20)

  console.error
    Error getting suggestion counts for document: Error: Query failed
        at Object.<anonymous> (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/suggestion-count.test.js:261:41)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      64 |       return counts;
      65 |     } catch (error) {
    > 66 |       console.error('Error getting suggestion counts for document:', error);
         |               ^
      67 |       return {};
      68 |     }
      69 |   }

      at SuggestionCountService.error [as getSuggestionCountsForDocument] (tests/unit/suggestion-count.test.js:66:15)
      at Object.<anonymous> (tests/unit/suggestion-count.test.js:265:22)

 PASS  tests/unit/suggestion-count.test.js (6.798 s)
  Suggestion Count Regression Tests
    Single Section Suggestion Counts
      ✓ should correctly count suggestions for a section (69 ms)
      ✓ should return 0 when no suggestions exist
      ✓ should handle database errors gracefully (1100 ms)
      ✓ should only count open suggestions
    Document-Wide Suggestion Counts
      ✓ should get suggestion counts for all sections in document
      ✓ should return empty object for document with no sections (1 ms)
      ✓ should handle sections with no suggestions (1 ms)
      ✓ should handle database errors in document counts (21 ms)
    Multi-Section Suggestion Counts
      ✓ should categorize exact match suggestions (1 ms)
      ✓ should categorize full coverage suggestions (1 ms)
      ✓ should categorize partial overlap suggestions (1 ms)
      ✓ should handle empty section ID list
      ✓ should handle null section IDs
    Performance Tests
      ✓ should handle large document with many sections efficiently (1 ms)
      ✓ should efficiently query counts for multiple sections (1 ms)
    Regression: Original Bug Fix
      ✓ should not return undefined for sections with no suggestions (1 ms)
      ✓ should initialize all section counts to 0 (1 ms)
      ✓ should handle malformed suggestion data

  console.log

    === Performance Test Summary ===

      at Object.log (tests/performance/dashboard-performance.test.js:620:13)

  console.log
    ================================

      at Object.log (tests/performance/dashboard-performance.test.js:628:13)

 FAIL  tests/performance/dashboard-performance.test.js (7.265 s)
  Dashboard Performance Tests
    Query Performance
      ✓ should execute simple query under 100ms (68 ms)
      ✓ should query 100 sections under 200ms (1 ms)
      ✓ should query with JOIN under 300ms (1 ms)
      ✓ should use efficient indexes (1 ms)
      ✓ should limit result set size (2 ms)
    Concurrent Access
      ✓ should handle 10 concurrent users (1 ms)
      ✓ should handle 100 concurrent read requests (1 ms)
      ✓ should maintain isolation under concurrent access (1 ms)
      ✓ should handle concurrent writes safely
      ✓ should prevent race conditions (1 ms)
    Large Dataset Handling
      ✓ should handle 1000 sections efficiently (7 ms)
      ✓ should paginate large results (2 ms)
      ✓ should handle large text content (1 ms)
      ✓ should efficiently count large result sets
      ✕ should handle bulk inserts efficiently (1 ms)
    Memory Usage
      ✓ should not leak memory with repeated queries (1 ms)
      ✓ should efficiently handle large objects (3 ms)
      ✓ should clean up resources after operations (1 ms)
    Response Time SLAs
      ✓ should meet P50 response time of <100ms (1 ms)
      ✓ should meet P95 response time of <500ms (1 ms)
      ✓ should meet P99 response time of <1000ms (1 ms)
    Caching Strategy
      ✓ should cache frequently accessed data
      ✓ should invalidate cache on data changes (1 ms)
      ✓ should implement TTL for cached data
    Database Connection Pooling
      ✓ should reuse database connections
      ✓ should handle connection pool exhaustion (1 ms)

  ● Dashboard Performance Tests › Large Dataset Handling › should handle bulk inserts efficiently

    TypeError: mockSupabase.from(...).insert is not a function

      368 |       await mockSupabase
      369 |         .from('bylaw_sections')
    > 370 |         .insert(bulkSections);
          |          ^
      371 |
      372 |       const duration = performance.now() - startTime;
      373 |

      at Object.insert (tests/performance/dashboard-performance.test.js:370:10)

 PASS  tests/unit/workflow.test.js
  Workflow Stage Tests
    Single Stage Workflow
      ✓ should support 1-stage workflow
      ✓ should complete after single approval (1 ms)
    Two Stage Workflow (Committee/Board)
      ✓ should support 2-stage workflow
      ✓ should advance through both stages
    Three Stage Workflow
      ✓ should support 3-stage workflow (1 ms)
      ✓ should track progress through stages
    Five Stage Workflow (Maximum)
      ✓ should support maximum 5 stages (1 ms)
      ✓ should enforce 5-stage maximum (90 ms)
      ✓ should maintain history through all stages
    Permission-Based Workflow Control
      ✓ should enforce stage permissions (1 ms)
      ✓ should prevent unauthorized advancement
      ✓ should support multiple permission levels per stage
    Custom Workflow Configurations
      ✓ should support neighborhood council workflow (1 ms)
      ✓ should support corporate governance workflow
      ✓ should support academic policy workflow
    Workflow State Management
      ✓ should allow workflow reset
      ✓ should maintain audit trail

  console.log
    Built hierarchy for 3 sections

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:167:13)

  console.log
    Root sections (depth 0): 3

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:168:13)

  console.log
    Child sections (depth > 0): 0

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:169:13)

  console.log
    Built hierarchy for 5 sections

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:167:13)

  console.log
    Root sections (depth 0): 2

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:168:13)

  console.log
    Child sections (depth > 0): 3

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:169:13)

  console.log
    Built hierarchy for 6 sections

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:167:13)

  console.log
    Root sections (depth 0): 1

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:168:13)

  console.log
    Child sections (depth > 0): 5

      at SectionStorage.log [as buildHierarchy] (src/services/sectionStorage.js:169:13)

 PASS  tests/sectionStorage.test.js
  SectionStorage
    buildHierarchy
      ✓ should build flat hierarchy for depth 0 sections (911 ms)
      ✓ should build parent-child relationships for nested sections (6 ms)
      ✓ should handle multi-level nesting (8 ms)
    formatSectionNumber
      ✓ should use section_number if available (1 ms)
      ✓ should use citation if section_number not available
      ✓ should build from prefix and number (1 ms)
      ✓ should return "Unnumbered" for empty section
    storeSections
      ○ skipped should store sections with hierarchy to database
    validateStoredSections
      ○ skipped should validate section hierarchy integrity
  Integration: Complete workflow
    ○ skipped should store and validate a complete document

  console.log
    Testing Success Page Redirect Fix...

      at Object.log (tests/success-redirect.test.js:41:9)

  console.log
    Initial state:

      at Object.log (tests/success-redirect.test.js:43:9)

  console.log
    - setupData exists: true

      at Object.log (tests/success-redirect.test.js:44:9)

  console.log
    - isConfigured: false

      at Object.log (tests/success-redirect.test.js:45:9)

  console.log

    After clear-session:

      at Object.log (tests/success-redirect.test.js:50:9)

  console.log
    - setupData exists: false

      at Object.log (tests/success-redirect.test.js:51:9)

  console.log
    - isConfigured: true

      at Object.log (tests/success-redirect.test.js:52:9)

  console.log

    ✅ All tests passed!

      at Object.log (tests/success-redirect.test.js:59:9)

  console.log

    Fix verification:

      at Object.log (tests/success-redirect.test.js:60:9)

  console.log
    - Session properly clears setup data

      at Object.log (tests/success-redirect.test.js:61:9)

  console.log
    - Session correctly marks isConfigured=true

      at Object.log (tests/success-redirect.test.js:62:9)

  console.log
    - This prevents /bylaws from redirecting back to /setup

      at Object.log (tests/success-redirect.test.js:63:9)

  console.log
    - Buttons on success page will now work correctly

      at Object.log (tests/success-redirect.test.js:64:9)

 FAIL  tests/success-redirect.test.js
  ● Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/index.js:1057:18)
      at node_modules/@jest/core/build/index.js:1127:165
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

 PASS  tests/setup/setup-integration.test.js
  Setup Wizard Integration
    Complete Setup Flow
      ✓ should complete full setup successfully (611 ms)
      ✓ should handle going back and editing
      ✓ should maintain data when moving between steps (1 ms)
    Error Handling
      ✓ should prevent completion before processing
      ✓ should validate required fields at each step
      ✓ should handle database errors gracefully (101 ms)
    Access Control
      ✓ should prevent main app access before setup (1 ms)
      ✓ should allow main app access after setup (607 ms)
    Different Configuration Scenarios
      ✓ should support simple 1-stage workflow
      ✓ should support complex 5-stage workflow
      ✓ should support custom document hierarchy

 FAIL  tests/integration/dashboard-flow.test.js (7.853 s)
  Multi-Tenancy Tests
    Organization Isolation
      ✕ should isolate data between organizations (39 ms)
      ✕ should prevent cross-organization data access
      ✓ should maintain organization_id on all records
    Concurrent Organization Usage
      ✕ should handle multiple organizations simultaneously (1 ms)
      ✕ should prevent data leaks during concurrent operations (1 ms)
    Organization-Specific Configuration
      ✓ should support different workflows per organization
      ✓ should support organization-specific hierarchy (1 ms)
    Data Migration Safety
      ✓ should preserve organization_id during migrations
      ✓ should maintain referential integrity
    Scalability Tests
      ✓ should handle many organizations efficiently (6 ms)
      ✓ should efficiently query organization-specific data (1 ms)
    Security Policies
      ✕ should enforce row-level security (1 ms)
      ✕ should prevent unauthorized data modification (1 ms)
  Dashboard Flow Integration Tests
    Complete Setup to Dashboard Flow
      ✓ should complete full onboarding workflow (1 ms)
      ✓ should redirect to setup if organization not configured (1 ms)
      ✓ should persist session across requests
    Authentication and Session Management
      ✓ should require authentication for dashboard
      ✓ should associate user with organization (1 ms)
      ✓ should handle session timeout gracefully
      ✓ should refresh session on activity
    Multi-Tenant Data Isolation
      ✕ should isolate data between concurrent users
      ✓ should prevent cross-organization data access
      ✓ should handle organization switching
    Dashboard API Endpoints
      ✕ should fetch sections with organization filter (1 ms)
      ✓ should create suggestion with organization context
      ✓ should fetch suggestions with organization filter
      ✓ should handle empty organization data gracefully (1 ms)
    Dashboard Navigation
      ✓ should navigate from setup to dashboard
      ✓ should redirect to setup from dashboard if not configured (1 ms)
      ✓ should allow direct dashboard access if configured
    Error Recovery
      ✕ should recover from database connection loss (1 ms)
      ✓ should handle partial data load failures (1 ms)
      ✓ should maintain data consistency on concurrent updates
    Performance and Scalability
      ✓ should handle large number of sections efficiently
      ✓ should paginate large result sets (1 ms)
      ✕ should cache frequently accessed data

  ● Multi-Tenancy Tests › Organization Isolation › should isolate data between organizations

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.073Z, "id": "sec-1760399548073", "organization_id": "org-1760399548073", "title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:28.074Z, "id": "sec-1760399548074", "organization_id": "org-1760399548073", "title": "Org 2 Section"}]

      93 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      94 |
    > 95 |       expect(org1Sections).toHaveLength(1);
         |                            ^
      96 |       expect(org2Sections).toHaveLength(1);
      97 |       expect(org1Sections[0].title).toBe('Org 1 Section');
      98 |       expect(org2Sections[0].title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/unit/multitenancy.test.js:95:28)

  ● Multi-Tenancy Tests › Organization Isolation › should prevent cross-organization data access

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  [{"created_at": 2025-10-13T23:52:28.086Z, "id": "sec-1760399548086", "organization_id": "org-1760399548086", "title": "Secret Section"}]

      107 |       const result = await db.crossOrgQuery(org1.id, org2.id);
      108 |
    > 109 |       expect(result.org1).toHaveLength(0);
          |                           ^
      110 |       expect(result.org2).toHaveLength(0); // RLS prevents access
      111 |     });
      112 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:109:27)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should handle multiple organizations simultaneously

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  [{"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org A Section"}, {"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org B Section"}, {"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org C Section"}]

      137 |       for (const org of orgs) {
      138 |         const sections = await db.getSectionsByOrg(org.id);
    > 139 |         expect(sections).toHaveLength(1);
          |                          ^
      140 |         expect(sections[0].title).toContain(org.name);
      141 |       }
      142 |     });

      at Object.toHaveLength (tests/unit/multitenancy.test.js:139:26)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should prevent data leaks during concurrent operations

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section 1"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section 2"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section A"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section B"}]

      157 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      158 |
    > 159 |       expect(org1Sections).toHaveLength(2);
          |                            ^
      160 |       expect(org2Sections).toHaveLength(2);
      161 |
      162 |       // Verify no cross-contamination

      at Object.toHaveLength (tests/unit/multitenancy.test.js:159:28)

  ● Multi-Tenancy Tests › Security Policies › should enforce row-level security

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.100Z, "id": "sec-1760399548100", "organization_id": "org-1760399548100", "title": "Public Section"}, {"created_at": 2025-10-13T23:52:28.100Z, "id": "sec-1760399548100", "organization_id": "org-1760399548100", "title": "Private Section"}]

      289 |       const visibleSections = await db.getSectionsByOrg(org1.id);
      290 |
    > 291 |       expect(visibleSections).toHaveLength(1);
          |                               ^
      292 |       expect(visibleSections[0].title).toBe('Public Section');
      293 |     });
      294 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:291:31)

  ● Multi-Tenancy Tests › Security Policies › should prevent unauthorized data modification

    expect(received).not.toContain(expected) // indexOf

    Expected value: not {"created_at": 2025-10-13T23:52:28.101Z, "id": "sec-1760399548101", "organization_id": "org-1760399548101", "title": "Locked Section"}
    Received array:     [{"created_at": 2025-10-13T23:52:28.101Z, "id": "sec-1760399548101", "organization_id": "org-1760399548101", "title": "Locked Section"}]

      302 |       const org1Sections = await db.getSectionsByOrg(org1.id);
      303 |
    > 304 |       expect(org1Sections).not.toContain(section);
          |                                ^
      305 |     });
      306 |   });
      307 | });

      at Object.toContain (tests/unit/multitenancy.test.js:304:32)

  ● Dashboard Flow Integration Tests › Multi-Tenant Data Isolation › should isolate data between concurrent users

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.106Z, "id": "sec-1760399548106", "organization_id": "org-1760399548106", "section_title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:28.106Z, "id": "sec-1760399548106", "organization_id": "org-1760399548106", "section_title": "Org 2 Section"}]

      185 |       const org2Sections = await db.getSectionsByOrg(session2.organizationId);
      186 |
    > 187 |       expect(org1Sections).toHaveLength(1);
          |                            ^
      188 |       expect(org2Sections).toHaveLength(1);
      189 |       expect(org1Sections[0].section_title).toBe('Org 1 Section');
      190 |       expect(org2Sections[0].section_title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/integration/dashboard-flow.test.js:187:28)

  ● Dashboard Flow Integration Tests › Dashboard API Endpoints › should fetch sections with organization filter

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

      246 |
      247 |       expect(response.success).toBe(true);
    > 248 |       expect(response.sections).toHaveLength(2);
          |                                 ^
      249 |     });
      250 |
      251 |     test('should create suggestion with organization context', async () => {

      at Object.toHaveLength (tests/integration/dashboard-flow.test.js:248:33)

  ● Dashboard Flow Integration Tests › Error Recovery › should recover from database connection loss

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: undefined

      365 |       const sections = await getSectionsWithRetry(mockSupabase, 'org-123', 1);
      366 |
    > 367 |       expect(sections).toEqual([]);
          |                        ^
      368 |     });
      369 |
      370 |     test('should handle partial data load failures', async () => {

      at Object.toEqual (tests/integration/dashboard-flow.test.js:367:24)

  ● Dashboard Flow Integration Tests › Performance and Scalability › should cache frequently accessed data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      455 |
      456 |       // Should hit cache
    > 457 |       expect(cache.has('org-123')).toBe(true);
          |                                    ^
      458 |     });
      459 |   });
      460 | });

      at Object.toBe (tests/integration/dashboard-flow.test.js:457:36)

 PASS  tests/unit/approval-workflow.test.js (7.303 s)
  Approval Workflow Unit Tests
    Approval State Machine
      ✓ should initialize in draft state (19 ms)
      ✓ should allow transition from draft to committee review (1 ms)
      ✓ should allow committee approval
      ✓ should allow transition to board review after committee approval
      ✓ should allow board approval (1 ms)
      ✓ should prevent invalid state transitions (63 ms)
      ✓ should prevent transitions from final states (1 ms)
      ✓ should maintain transition history (1 ms)
      ✓ should allow rejection from review states (1 ms)
      ✓ should track metadata in transition history
    Section Locking
      ✓ should lock a section successfully
      ✓ should prevent locking already locked sections (1 ms)
      ✓ should unlock a section successfully (5 ms)
      ✓ should prevent unlocking non-locked sections (1 ms)
      ✓ should retrieve lock information
      ✓ should return null for non-locked sections
    Multi-Section Locking
      ✓ should lock multiple sections atomically
      ✓ should fail if any section is already locked (1 ms)
      ✓ should maintain multi-section flag in lock info (1 ms)
      ✓ should unlock multiple sections
      ✓ should handle partial unlocking gracefully (1 ms)
    Workflow and Locking Integration
      ✓ should lock section when committee approves
      ✓ should determine edit permissions based on state
      ✓ should prevent editing locked sections
    Edge Cases and Error Handling
      ✓ should handle rapid state transitions
      ✓ should handle empty section IDs in multi-lock
      ✓ should validate state transition permissions

  console.error
    Error parsing Word document: Error: File not found - expected for this test
        at Object.<anonymous> (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/tests/unit/wordParser.edge-cases.test.js:151:9)
        at Promise.finally.completed (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1557:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1497:10)
        at _callCircusTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1007:40)
        at processTicksAndRejections (node:internal/process/task_queues:105:5)
        at _runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:947:3)
        at /mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:849:7
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:862:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at _runTestsForDescribeBlock (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:857:11)
        at run (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:761:3)
        at runAndTransformResultsToJestFormat (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/jestAdapterInit.js:1918:21)
        at jestAdapter (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:275:16)
        at runTest (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:343:7)
        at Object.worker (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/node_modules/jest-runner/build/testWorker.js:497:12)

      45 |       };
      46 |     } catch (error) {
    > 47 |       console.error('Error parsing Word document:', error);
         |               ^
      48 |       return {
      49 |         success: false,
      50 |         error: error.message,

      at WordParser.error [as parseDocument] (src/parsers/wordParser.js:47:15)
      at Object.<anonymous> (tests/unit/wordParser.edge-cases.test.js:160:22)

 FAIL  tests/unit/parsers.test.js (9.134 s)
  Document Parser Tests
    Article/Section Format (Traditional)
      ✓ should parse Article I, Section 1 format (22 ms)
      ✕ should handle multiple articles (2 ms)
      ✓ should handle Roman numerals correctly (1 ms)
    Chapter/Article Format (Alternate)
      ✓ should parse Chapter/Article hierarchy (1 ms)
    Numbered Sections (Simple)
      ✓ should parse simple numbered sections (1 ms)
    Edge Cases
      ✕ should handle empty sections gracefully (1 ms)
      ✓ should handle sections without articles (1 ms)
      ✕ should preserve whitespace within content
      ✓ should handle very long section text
    Custom Hierarchy Patterns
      ✓ should support custom patterns via configuration
    Multi-level Depth
      ✓ should handle 3+ level hierarchies
  Parser Configuration
    ✓ should validate parser configuration (1 ms)
    ✓ should handle missing optional patterns
  Parser Performance
    ✕ should parse large documents efficiently

  ● Document Parser Tests › Article/Section Format (Traditional) › should handle multiple articles

    expect(received).toBe(expected) // Object.is equality

    Expected: "I"
    Received: "II"

      102 |
      103 |       expect(sections).toHaveLength(2);
    > 104 |       expect(sections[0].hierarchy.article.number).toBe('I');
          |                                                    ^
      105 |       expect(sections[1].hierarchy.article.number).toBe('II');
      106 |     });
      107 |

      at Object.toBe (tests/unit/parsers.test.js:104:52)

  ● Document Parser Tests › Edge Cases › should handle empty sections gracefully

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"hierarchy": {"article": {"name": "TEST", "number": "I"}, "chapter": null, "section": {"number": "2", "title": "Has Content"}}, "text": "Some content here."}]

      175 |       const sections = parseDocumentHierarchy(content);
      176 |
    > 177 |       expect(sections).toHaveLength(2);
          |                        ^
      178 |       expect(sections[0].text).toBe('');
      179 |       expect(sections[1].text).toContain('content');
      180 |     });

      at Object.toHaveLength (tests/unit/parsers.test.js:177:24)

  ● Document Parser Tests › Edge Cases › should preserve whitespace within content

    expect(received).toContain(expected) // indexOf

    Expected substring: "  Indented"
    Received string:    "Indented text
        More indent
      Back to first level"

      203 |       const sections = parseDocumentHierarchy(content);
      204 |
    > 205 |       expect(sections[0].text).toContain('  Indented');
          |                                ^
      206 |       expect(sections[0].text).toContain('    More indent');
      207 |     });
      208 |

      at Object.toContain (tests/unit/parsers.test.js:205:32)

  ● Parser Performance › should parse large documents efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: 100
    Received: 101

      294 |     const duration = Date.now() - startTime;
      295 |
    > 296 |     expect(sections.length).toBe(100);
          |                             ^
      297 |     expect(duration).toBeLessThan(1000); // Should parse in < 1 second
      298 |   });
      299 | });

      at Object.toBe (tests/unit/parsers.test.js:296:29)

  console.log
    [WordParser] Detected TOC: lines 2-4 (3 lines matched pattern)

      at WordParser.log [as detectTableOfContents] (src/parsers/wordParser.js:99:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate ARTICLE I (13 → 83 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: ARTICLE I

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Section 2 (2 → 9 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] Skipping duplicate Section 2 (keeping original with 9 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:380:19)

  console.log
    [WordParser] Replacing duplicate Section 2 (9 → 48 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 3 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Section 2

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Section 1 (0 → 19 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Section 1

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate ARTICLE I (0 → 7 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: ARTICLE I

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate ARTICLE I (0 → 7 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: ARTICLE I

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Section 5 (0 → 12 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Section 5

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 1 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [ { lines: '0-1', preview: 'This is preamble content...' } ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created preamble section for orphan at lines 0-1

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:543:17)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 2 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [
      { lines: '0-0', preview: 'TABLE OF CONTENTS...' },
      { lines: '2-3', preview: 'ARTICLE I\tNAME\t4...' }
    ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created preamble section for orphan at lines 0-0

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:543:17)

  console.log
    [WordParser] Attached orphan (lines 2-3) to section: Preamble

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:526:19)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 1 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [ { lines: '0-0', preview: 'A...' } ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Skipping trivial orphan at lines 0-0

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:506:17)

 FAIL  tests/unit/wordParser.edge-cases.test.js (9.607 s)
  Word Parser - Critical Edge Cases
    Issue #1: Undefined Level Handling
      ✕ should handle undefined hierarchy levels array (88 ms)
      ✕ should handle missing hierarchy config entirely (19 ms)
      ✓ should handle empty levels array (1 ms)
      ✕ should handle null hierarchy config (14 ms)
      ✓ should use level defaults when levelDef not found (1 ms)
      ✓ should handle parseDocument with undefined levels (625 ms)
    Issue #2: Duplicate Section Prevention
      ✓ should detect Table of Contents patterns (29 ms)
      ✓ should deduplicate sections by citation (8 ms)
      ✓ should handle multiple duplicates of same section (11 ms)
      ✓ should not deduplicate different citations (2 ms)
      ✓ should prefer section with content over empty duplicate (3 ms)
      ✓ should handle deduplication with undefined text fields (21 ms)
      ✓ should handle deduplication with null text fields (3 ms)
    Text Normalization Edge Cases
      ✓ should handle TAB-separated content correctly
      ✕ should handle multiple spaces and tabs (2 ms)
      ✓ should normalize case consistently
    Orphaned Content Handling
      ✓ should capture content before first section (3 ms)
      ✕ should not capture TOC lines as orphans (4 ms)
      ✓ should skip trivial orphaned content (3 ms)
    Section Validation
      ✓ should detect empty sections
      ✓ should detect duplicate citations
      ✓ should handle validation with no errors
    Citation Building
      ✓ should build hierarchical citations for sections
      ✓ should handle section without parent article
      ✓ should build simple citation for articles
      ✓ should find most recent parent article for subsections
    Title and Content Extraction
      ✓ should extract title with colon delimiter
      ✓ should extract title and content with dash separator (1 ms)
      ✓ should handle title only (no content)
      ✓ should handle content on same line as header
      ✓ should generate default title when none provided (1 ms)
    Performance and Edge Cases
      ✕ should handle very large documents efficiently
      ✕ should handle sections with special characters
      ✕ should handle Unicode characters
      ✕ should handle extremely long text content (14 ms)

  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle undefined hierarchy levels array

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:36:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:37:14)

      35 |       expect(() => {
      36 |         wordParser.enrichSections(sections, configWithUndefinedLevels);
    > 37 |       }).not.toThrow();
         |              ^
      38 |
      39 |       const result = wordParser.enrichSections(sections, configWithUndefinedLevels);
      40 |       expect(result).toHaveLength(1);

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:37:14)

  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle missing hierarchy config entirely

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:60:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:61:14)

      59 |       expect(() => {
      60 |         wordParser.enrichSections(sections, configWithNoHierarchy);
    > 61 |       }).not.toThrow();
         |              ^
      62 |
      63 |       const result = wordParser.enrichSections(sections, configWithNoHierarchy);
      64 |       expect(result[0].depth).toBe(0);

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:61:14)

  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle null hierarchy config

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:112:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:113:14)

      111 |       expect(() => {
      112 |         wordParser.enrichSections(sections, configWithNullHierarchy);
    > 113 |       }).not.toThrow();
          |              ^
      114 |     });
      115 |
      116 |     test('should use level defaults when levelDef not found', () => {

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:113:14)

  ● Word Parser - Critical Edge Cases › Text Normalization Edge Cases › should handle multiple spaces and tabs

    expect(received).toBe(expected) // Object.is equality

    Expected: "SECTION 1: PURPOSE"
    Received: "SECTION 1:"

      318 |       const normalized = wordParser.normalizeForMatching(text);
      319 |
    > 320 |       expect(normalized).toBe('SECTION 1: PURPOSE');
          |                          ^
      321 |     });
      322 |
      323 |     test('should normalize case consistently', () => {

      at Object.toBe (tests/unit/wordParser.edge-cases.test.js:320:26)

  ● Word Parser - Critical Edge Cases › Orphaned Content Handling › should not capture TOC lines as orphans

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      388 |       // TOC lines should not create orphan sections
      389 |       const orphans = result.filter(s => s.isOrphan);
    > 390 |       expect(orphans.length).toBe(0);
          |                              ^
      391 |     });
      392 |
      393 |     test('should skip trivial orphaned content', () => {

      at Object.toBe (tests/unit/wordParser.edge-cases.test.js:390:30)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle very large documents efficiently

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:590:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle sections with special characters

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:607:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle Unicode characters

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:623:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle extremely long text content

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:645:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:646:14)

      644 |       expect(() => {
      645 |         wordParser.enrichSections(sections, { hierarchy: {} });
    > 646 |       }).not.toThrow();
          |              ^
      647 |     });
      648 |   });
      649 | });

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:646:14)

  console.log
    [WordParser] Detected TOC: lines 30-128 (50 lines matched pattern)

      at WordParser.log [as detectTableOfContents] (src/parsers/wordParser.js:99:15)

  console.log
    [WordParser] Filtered 47 TOC items, kept 60 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Detected TOC: lines 30-128 (50 lines matched pattern)

      at WordParser.log [as detectTableOfContents] (src/parsers/wordParser.js:99:15)

  console.log
    [WordParser] Found 3 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [
      { lines: '18-18', preview: 'BYLAWS OF THE...' },
      {
        lines: '22-22',
        preview: 'RESEDA NEIGHBORHOOD COUNCIL May 17, 2024...'
      },
      { lines: '24-24', preview: 'Table of Contents...' }
    ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created preamble section for orphan at lines 18-18

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:543:17)

  console.log
    [WordParser] Attached orphan (lines 22-22) to section: Preamble

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:526:19)

  console.log
    [WordParser] Attached orphan (lines 24-24) to section: Preamble

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:526:19)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    Original words: 9211

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:96:15)

  console.log
    Parsed words: 8920

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:97:15)

  console.log
    Retention rate: 96.84%

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:98:15)

  console.log
    Original characters: 46747

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:114:15)

  console.log
    Parsed characters: 45235

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:115:15)

  console.log
    Retention rate: 96.77%

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:116:15)

  console.log
    Reconstructed length: 47064

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:140:15)

  console.log
    Original length: 46747

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:141:15)

  console.log
    Coverage: 100.68%

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:142:15)

  console.log
    Total articles detected: 14

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:152:15)

  console.log
    Articles: Article I, Article II, Article III, Article IV, Article V, Article VI, Article VII, Article VIII, Article IX, Article X, Article XI, Article XII, Article XIII, Article XIV

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:153:15)

  console.log
    Total sections detected: 36

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:162:15)

  console.log
    Total subsections detected: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:171:15)

  console.log
    Total clauses detected: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:180:15)

  console.log
    Gaps found in section numbering: [
      {
        type: 'section',
        expected: 4,
        actual: 1,
        previous: 'Article II, Section 3',
        next: 'Article III, Section 1'
      },
      {
        type: 'section',
        expected: 3,
        actual: 1,
        previous: 'Article III, Section 2',
        next: 'Article V, Section 1'
      },
      {
        type: 'section',
        expected: 12,
        actual: 1,
        previous: 'Article V, Section 11',
        next: 'Article VI, Section 1'
      },
      {
        type: 'section',
        expected: 5,
        actual: 1,
        previous: 'Article VI, Section 4',
        next: 'Article VII, Section 1'
      },
      {
        type: 'section',
        expected: 4,
        actual: 1,
        previous: 'Article VII, Section 3',
        next: 'Article VIII, Section 1'
      },
      {
        type: 'section',
        expected: 5,
        actual: 1,
        previous: 'Article VIII, Section 4',
        next: 'Article X, Section 1'
      },
      {
        type: 'section',
        expected: 7,
        actual: 1,
        previous: 'Article X, Section 6',
        next: 'Article XIV, Section 1'
      }
    ]

      at log (tests/integration/rnc-bylaws-parse.test.js:282:21)
          at Array.forEach (<anonymous>)

  console.log
    Document formatting:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:294:15)

  console.log
      Bold: Yes

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:295:15)

  console.log
      Italic: Yes

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:296:15)

  console.log
      Underline: No

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:297:15)

  console.warn
    WARNING: 55270 characters after last section

      313 |
      314 |         if (remainingText.length > 100) {
    > 315 |           console.warn(`WARNING: ${remainingText.length} characters after last section`);
          |                   ^
      316 |           console.log('Preview:', remainingText.substring(0, 200) + '...');
      317 |         }
      318 |       }

      at Object.warn (tests/integration/rnc-bylaws-parse.test.js:315:19)

  console.log
    Preview: affiliation and inclusive in our operations including, but not limited to, the process of electing or selecting the Board of Directors, Officers, and committee members, as hereinafter set forth;



    To...

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:316:19)

  console.log
    Validation results:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:329:15)

  console.log
      Valid: true

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:330:15)

  console.log
      Warnings: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:331:15)

  console.log
      Errors: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:332:15)

  console.log
    Empty sections found: 2

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:355:17)

  console.log
      Articles (organizational containers): Article VI, Article X

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:356:17)

  console.log
      Non-containers: none

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:357:17)

  console.log

    ======================================================================

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:444:15)

  console.log
    RNC BYLAWS PARSER - COMPLETENESS TEST REPORT

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:445:15)

  console.log
    ======================================================================

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:446:15)

  console.log

    DOCUMENT:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:447:15)

  console.log
      File: setup-1759980041923-342199667.docx

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:448:15)

  console.log

    ORIGINAL DOCUMENT STATS:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:449:15)

  console.log
      Total characters: 56,879

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:450:15)

  console.log
      Total words: 9,211

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:451:15)

  console.log
      Total lines: 1,123

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:452:15)

  console.log

    PARSED RESULT:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:453:15)

  console.log
      Success: YES

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:454:15)

  console.log
      Total sections: 51

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:455:15)

  console.log
      Section types:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:456:15)

  console.log
        preamble: 1

      at log (tests/integration/rnc-bylaws-parse.test.js:458:17)
          at Array.forEach (<anonymous>)

  console.log
        article: 14

      at log (tests/integration/rnc-bylaws-parse.test.js:458:17)
          at Array.forEach (<anonymous>)

  console.log
        section: 36

      at log (tests/integration/rnc-bylaws-parse.test.js:458:17)
          at Array.forEach (<anonymous>)

  console.log
      Total characters: 45,235

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:460:15)

  console.log
      Total words: 8,920

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:461:15)

  console.log

    COMPLETENESS:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:462:15)

  console.log
      Word retention: 96.84%

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:463:15)

  console.log
      Character retention: 79.53%

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:464:15)

  console.log

    VALIDATION:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:465:15)

  console.log
      Valid: YES

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:466:15)

  console.log
      Warnings: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:467:15)

  console.log
      Errors: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:468:15)

  console.log

    EDGE CASES:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:469:15)

  console.log
      Empty sections: 2

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:470:15)

  console.log
      Missing titles: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:471:15)

  console.log
      Duplicate citations: 0

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:472:15)

  console.log

    ======================================================================

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:473:15)

  console.log
    TEST CONCLUSION:

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:474:15)

  console.log
    ⚠️  ISSUES FOUND - See details above

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:486:17)

  console.log
    ======================================================================

      at Object.log (tests/integration/rnc-bylaws-parse.test.js:488:15)

 PASS  tests/integration/rnc-bylaws-parse.test.js (9.86 s)
  RNC Bylaws Parser - Completeness Test
    Document Loading
      ✓ should load the RNC bylaws document (30 ms)
      ✓ should extract raw text successfully (1 ms)
      ✓ should parse document without errors
    Content Completeness
      ✓ should capture all text content (word count comparison) (22 ms)
      ✓ should capture all character content (3 ms)
      ✓ should not have empty gaps between sections (2 ms)
    Hierarchy Detection
      ✓ should detect all articles (2 ms)
      ✓ should detect all sections (1 ms)
      ✓ should detect all subsections (1 ms)
      ✓ should detect all clause types
      ✓ all sections should have valid citations
      ✓ all sections should have titles
    Edge Cases
      ✓ should handle document intro (content before first section)
      ✓ should detect any skipped section numbers (1 ms)
      ✓ should handle special formatting (bold, italic, underline) (3 ms)
      ✓ should identify any content after last section (13 ms)
    Validation
      ✓ should pass all validation checks (3 ms)
      ✓ should have no empty sections (1 ms)
      ✓ should have no duplicate citations (1 ms)
    Test Report
      ✓ should generate comprehensive test report (31 ms)

 PASS  tests/integration/approval-workflow-integration.test.js (6.665 s)
  Approval Workflow Integration Tests
    Complete Workflow Progression
      ✓ should complete full approval workflow (26 ms)
      ✓ should handle rejection workflow (1 ms)
      ✓ should track approval history (1 ms)
    Multi-Section Approval Workflow
      ✓ should approve multiple sections together
      ✓ should fail if any section in group is already locked
      ✓ should unlock multiple sections atomically (1 ms)
    Section Lock Management
      ✓ should create section lock with metadata
      ✓ should retrieve lock information (1 ms)
      ✓ should query locked sections for document (1 ms)
    Approval State Validation
      ✓ should validate state transitions before applying
      ✓ should prevent editing locked sections (1 ms)
      ✓ should allow editing draft and review sections
    Suggestion and Section Linking
      ✓ should link suggestion to locked sections (1 ms)
      ✓ should update section text from approved suggestion
    Error Handling and Rollback
      ✓ should rollback on failed multi-section lock
      ✓ should handle concurrent approval attempts (1 ms)
      ✓ should validate approval permissions (5 ms)
    Performance and Scalability
      ✓ should handle large batch approvals efficiently (1 ms)
      ✓ should efficiently query approval history

 FAIL  tests/unit/multitenancy.test.js (7.676 s)
  Multi-Tenancy Tests
    Organization Isolation
      ✕ should isolate data between organizations (26 ms)
      ✕ should prevent cross-organization data access (1 ms)
      ✓ should maintain organization_id on all records (1 ms)
    Concurrent Organization Usage
      ✕ should handle multiple organizations simultaneously (1 ms)
      ✕ should prevent data leaks during concurrent operations (1 ms)
    Organization-Specific Configuration
      ✓ should support different workflows per organization (1 ms)
      ✓ should support organization-specific hierarchy
    Data Migration Safety
      ✓ should preserve organization_id during migrations
      ✓ should maintain referential integrity (1 ms)
    Scalability Tests
      ✓ should handle many organizations efficiently (6 ms)
      ✓ should efficiently query organization-specific data (1 ms)
    Security Policies
      ✕ should enforce row-level security (1 ms)
      ✕ should prevent unauthorized data modification

  ● Multi-Tenancy Tests › Organization Isolation › should isolate data between organizations

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:31.194Z, "id": "sec-1760399551194", "organization_id": "org-1760399551194", "title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:31.194Z, "id": "sec-1760399551194", "organization_id": "org-1760399551194", "title": "Org 2 Section"}]

      93 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      94 |
    > 95 |       expect(org1Sections).toHaveLength(1);
         |                            ^
      96 |       expect(org2Sections).toHaveLength(1);
      97 |       expect(org1Sections[0].title).toBe('Org 1 Section');
      98 |       expect(org2Sections[0].title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/unit/multitenancy.test.js:95:28)

  ● Multi-Tenancy Tests › Organization Isolation › should prevent cross-organization data access

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  [{"created_at": 2025-10-13T23:52:31.205Z, "id": "sec-1760399551205", "organization_id": "org-1760399551205", "title": "Secret Section"}]

      107 |       const result = await db.crossOrgQuery(org1.id, org2.id);
      108 |
    > 109 |       expect(result.org1).toHaveLength(0);
          |                           ^
      110 |       expect(result.org2).toHaveLength(0); // RLS prevents access
      111 |     });
      112 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:109:27)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should handle multiple organizations simultaneously

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  [{"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org A Section"}, {"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org B Section"}, {"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org C Section"}]

      137 |       for (const org of orgs) {
      138 |         const sections = await db.getSectionsByOrg(org.id);
    > 139 |         expect(sections).toHaveLength(1);
          |                          ^
      140 |         expect(sections[0].title).toContain(org.name);
      141 |       }
      142 |     });

      at Object.toHaveLength (tests/unit/multitenancy.test.js:139:26)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should prevent data leaks during concurrent operations

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section 1"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section 2"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section A"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section B"}]

      157 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      158 |
    > 159 |       expect(org1Sections).toHaveLength(2);
          |                            ^
      160 |       expect(org2Sections).toHaveLength(2);
      161 |
      162 |       // Verify no cross-contamination

      at Object.toHaveLength (tests/unit/multitenancy.test.js:159:28)

  ● Multi-Tenancy Tests › Security Policies › should enforce row-level security

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:31.218Z, "id": "sec-1760399551218", "organization_id": "org-1760399551218", "title": "Public Section"}, {"created_at": 2025-10-13T23:52:31.218Z, "id": "sec-1760399551218", "organization_id": "org-1760399551218", "title": "Private Section"}]

      289 |       const visibleSections = await db.getSectionsByOrg(org1.id);
      290 |
    > 291 |       expect(visibleSections).toHaveLength(1);
          |                               ^
      292 |       expect(visibleSections[0].title).toBe('Public Section');
      293 |     });
      294 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:291:31)

  ● Multi-Tenancy Tests › Security Policies › should prevent unauthorized data modification

    expect(received).not.toContain(expected) // indexOf

    Expected value: not {"created_at": 2025-10-13T23:52:31.219Z, "id": "sec-1760399551219", "organization_id": "org-1760399551219", "title": "Locked Section"}
    Received array:     [{"created_at": 2025-10-13T23:52:31.219Z, "id": "sec-1760399551219", "organization_id": "org-1760399551219", "title": "Locked Section"}]

      302 |       const org1Sections = await db.getSectionsByOrg(org1.id);
      303 |
    > 304 |       expect(org1Sections).not.toContain(section);
          |                                ^
      305 |     });
      306 |   });
      307 | });

      at Object.toContain (tests/unit/multitenancy.test.js:304:32)

 FAIL  tests/setup/setup-routes.test.js
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/setup/setup-routes.test.js'

       5 |
       6 | const express = require('express');
    >  7 | const request = require('supertest');
         |                 ^
       8 |
       9 | // Validation helpers
      10 | function validateOrganizationData(data) {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.require (tests/setup/setup-routes.test.js:7:17)

 FAIL  tests/integration/admin-api.test.js (11.382 s)
  Admin API Integration Tests
    GET /admin/dashboard
      ✓ should return admin dashboard with all organizations (3591 ms)
      ✓ should deny access to non-admin users (1 ms)
      ✓ should calculate system-wide statistics (1 ms)
      ✓ should handle database errors gracefully (1 ms)
    GET /admin/organization/:id
      ✓ should return detailed organization view (1 ms)
      ✓ should return 404 for non-existent organization
      ✓ should include recent activity for organization (1 ms)
    POST /admin/organization/:id/delete
      ✕ should delete organization with confirmation
      ✓ should require DELETE confirmation (1 ms)
      ✕ should handle deletion errors (1 ms)
      ✓ should deny deletion without admin access (1 ms)
    User Management
      ✓ should list users for organization
      ✓ should handle role-based filtering (1 ms)
    Statistics and Metrics
      ✓ should calculate organization metrics correctly
      ✓ should aggregate statistics across organizations (1 ms)
    Error Handling and Edge Cases
      ✓ should handle empty organizations list (1 ms)
      ✓ should handle organizations with no users
      ✓ should handle concurrent admin requests (1 ms)

  ● Admin API Integration Tests › POST /admin/organization/:id/delete › should delete organization with confirmation

    TypeError: req.supabaseService.from(...).delete(...).eq is not a function

      319 |       };
      320 |
    > 321 |       const result = await req.supabaseService.from('organizations').delete().eq('id', '1');
          |                                                                               ^
      322 |
      323 |       expect(result.error).toBeNull();
      324 |     });

      at Object.eq (tests/integration/admin-api.test.js:321:79)

  ● Admin API Integration Tests › POST /admin/organization/:id/delete › should handle deletion errors

    TypeError: req.supabaseService.from(...).delete(...).eq is not a function

      352 |       };
      353 |
    > 354 |       const result = await req.supabaseService.from('organizations').delete().eq('id', '1');
          |                                                                               ^
      355 |
      356 |       expect(result.error).toBeTruthy();
      357 |     });

      at Object.eq (tests/integration/admin-api.test.js:354:79)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Article I (13 → 56 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Article I

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Skipping duplicate Section 1 (keeping original with 39 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:380:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Section 1

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Section 2 (2 → 24 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] Skipping duplicate Section 2 (keeping original with 24 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:380:19)

  console.log
    [WordParser] Replacing duplicate Section 2 (24 → 57 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 3 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Section 2

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate Article I (0 → 19 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: Article I

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

 PASS  tests/unit/deduplication.test.js (11.821 s)
  Section Deduplication
    ✓ should remove duplicate sections with same citation and title (326 ms)
    ✓ should keep original when duplicate has less content (5 ms)
    ✓ should handle sections with no duplicates (3 ms)
    ✓ should handle multiple duplicates of same section (6 ms)
    ✓ should handle empty sections in duplicates (8 ms)
    ✓ should log duplicate removal information (1 ms)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 1 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [ { lines: '0-1', preview: 'This is a preamble paragraph....' } ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created preamble section for orphan at lines 0-1

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:543:17)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 3 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 4 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 4 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] Replacing duplicate ARTICLE I, Section 1 (17 → 31 chars)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:375:19)

  console.log
    [WordParser] ⚠️  Removed 1 duplicate sections

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:386:15)

  console.log
    [WordParser] Note: Source document contains duplicate content (e.g., table of contents + body)

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:387:15)

  console.log
    [WordParser] Deduplicated citations: ARTICLE I, Section 1

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:391:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 4 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 4 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 4 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 2 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [
      { lines: '0-0', preview: 'Introduction...' },
      { lines: '2-2', preview: 'This document uses mixed formatting....' }
    ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created preamble section for orphan at lines 0-0

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:543:17)

  console.log
    [WordParser] Attached orphan (lines 2-2) to section: Preamble

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:526:19)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 0 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] Found 4 orphaned content block(s)

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:477:15)

  console.log
    [WordParser] Orphan details: [
      { lines: '0-0', preview: 'This is a simple document....' },
      {
        lines: '2-2',
        preview: 'It has no traditional section numbers....'
      },
      { lines: '4-4', preview: 'Just plain paragraphs of content....' },
      { lines: '6-6', preview: 'Multiple lines describing something....' }
    ]

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:478:15)

  console.log
    [WordParser] Created unnumbered section for orphan at lines 0-0

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:559:17)

  console.log
    [WordParser] Created unnumbered section for orphan at lines 2-2

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:559:17)

  console.log
    [WordParser] Created unnumbered section for orphan at lines 4-4

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:559:17)

  console.log
    [WordParser] Created unnumbered section for orphan at lines 6-6

      at WordParser.log [as attachOrphansToSections] (src/parsers/wordParser.js:559:17)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 5 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 0 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 0 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 3 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

  console.log
    [WordParser] Filtered 0 TOC items, kept 2 real headers

      at WordParser.log [as parseSections] (src/parsers/wordParser.js:147:13)

  console.log
    [WordParser] Scanning for orphaned content...

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:404:13)

  console.log
    [WordParser] No orphaned content found - all content captured!

      at WordParser.log [as captureOrphanedContent] (src/parsers/wordParser.js:483:15)

  console.log
    [WordParser] Checking for duplicate sections...

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:351:13)

  console.log
    [WordParser] ✓ No duplicate sections found

      at WordParser.log [as deduplicateSections] (src/parsers/wordParser.js:393:15)

 FAIL  tests/unit/wordParser.orphan.test.js (12.483 s)
  Word Parser - Orphaned Content Capture
    Unnumbered Content
      ✓ should capture preamble before first section (284 ms)
      ✓ should capture trailing content after last section (6 ms)
      ✓ should create unnumbered sections for standalone blocks (6 ms)
    Missing Section Numbers
      ✓ should handle documents with skipped numbers (8 ms)
      ✕ should handle documents with duplicate numbers (6 ms)
      ✓ should handle out-of-order section numbers (5 ms)
    Content Between Articles
      ✓ should capture transitional content between articles (4 ms)
      ✓ should handle article-level notes (4 ms)
    Mixed Format Documents
      ✓ should handle documents with multiple formatting styles (7 ms)
      ✓ should handle documents with only unnumbered content (14 ms)
      ✓ should preserve all content even with weird numbering (4 ms)
    Edge Cases
      ✓ should handle empty document gracefully (7 ms)
      ✓ should handle document with only whitespace (3 ms)
      ✓ should not duplicate content during capture (3 ms)
      ✓ should handle very long orphaned content (3 ms)
    Content Integrity
      ✓ should maintain exact content without modifications (3 ms)
      ✓ should capture special characters correctly (3 ms)

  ● Word Parser - Orphaned Content Capture › Missing Section Numbers › should handle documents with duplicate numbers

    expect(received).toContain(expected) // indexOf

    Expected substring: "First occurrence"
    Received string:    " Second occurrence of Section 1."

      133 |
      134 |       const totalText = sections.map(s => s.text || '').join(' ');
    > 135 |       expect(totalText).toContain('First occurrence');
          |                         ^
      136 |       expect(totalText).toContain('Second occurrence');
      137 |     });
      138 |

      at Object.toContain (tests/unit/wordParser.orphan.test.js:135:25)

  console.log
    [CONFIG-DEBUG] 📊 Database returned:

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:266:15)

  console.log
    [CONFIG-DEBUG]   - settings keys: []

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:267:15)

  console.log
    [CONFIG-DEBUG]   - hierarchy_config: present

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:268:15)

  console.log
    [CONFIG-DEBUG]   - settings.hierarchy: absent

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:269:15)

  console.log
    [CONFIG-DEBUG] ✅ Using complete hierarchy from database

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:300:17)

  console.log
    [CONFIG-DEBUG] 📦 Returning dbConfig with keys: [ 'hierarchy' ]

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:311:15)

  console.log
    [CONFIG-DEBUG]   - dbConfig.hierarchy: present

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:312:15)

  console.log
    [CONFIG-DEBUG]   - dbConfig.hierarchy.levels: 2

      at OrganizationConfig.log [as loadFromDatabase] (src/config/organizationConfig.js:313:15)

  console.log
    [SETUP-DEBUG] 📋 Loaded organization config:

      at SetupService.log [as processDocumentImport] (src/services/setupService.js:180:15)

  console.log
    [SETUP-DEBUG]   - Has hierarchy: true

      at SetupService.log [as processDocumentImport] (src/services/setupService.js:181:15)

  console.log
    [SETUP-DEBUG]   - Hierarchy levels: 2

      at SetupService.log [as processDocumentImport] (src/services/setupService.js:182:15)

  console.log
    [SETUP-DEBUG]     * Article (type: article, depth: 0)

      at log (src/services/setupService.js:185:19)
          at Array.forEach (<anonymous>)

  console.log
    [SETUP-DEBUG]     * Section (type: section, depth: 1)

      at log (src/services/setupService.js:185:19)
          at Array.forEach (<anonymous>)

 FAIL  tests/setup-parser-integration.test.js (9.509 s)
  Setup Parser Integration
    ✓ setupService can access wordParser (14 ms)
    ✓ wordParser is exported correctly
    ✓ setupService.processDocumentImport has correct signature (1 ms)
    ✓ integration flow validation (264 ms)
    ✓ parser can be called with organization config (1 ms)
  Setup Route Integration
    ✕ setup route case statement is updated (1980 ms)

  ● Setup Route Integration › setup route case statement is updated

    expect(received).toContain(expected) // indexOf

    Expected substring: "case 'import'"
    Received string:    "function router(req, res, next) {
        router.handle(req, res, next);
      }"

      88 |
      89 |     // Verify the import case has been updated
    > 90 |     expect(routeString).toContain('case \'import\'');
         |                         ^
      91 |     expect(routeString).toContain('setupService');
      92 |     expect(routeString).toContain('processDocumentImport');
      93 |   });

      at Object.toContain (tests/setup-parser-integration.test.js:90:25)

  console.error
    Error parsing Word document: Error: ENOENT: no such file or directory, open '/path/to/test.docx'
        at open (node:internal/fs/promises:639:25)
        at Object.readFile (node:internal/fs/promises:1243:14)
        at WordParser.parseDocument (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/parsers/wordParser.js:16:22)
        at SetupService.processDocumentImport (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/services/setupService.js:190:27) {
      errno: -2,
      code: 'ENOENT',
      syscall: 'open',
      path: '/path/to/test.docx'
    }

      39 |         metadata: {
      40 |           source: 'word',
    > 41 |           fileName: filePath.split('/').pop(),
         |               ^
      42 |           parsedAt: new Date().toISOString(),
      43 |           sectionCount: sections.length
      44 |         }

      at WordParser.parseDocument (src/parsers/wordParser.js:41:15)
      at SetupService.processDocumentImport (src/services/setupService.js:190:27)

  console.error
    Error parsing Word document: Error: ENOENT: no such file or directory, open '/mock/path.docx'
        at open (node:internal/fs/promises:639:25)
        at Object.readFile (node:internal/fs/promises:1243:14)
        at WordParser.parseDocument (/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized/src/parsers/wordParser.js:16:22) {
      errno: -2,
      code: 'ENOENT',
      syscall: 'open',
      path: '/mock/path.docx'
    }

      39 |         metadata: {
      40 |           source: 'word',
    > 41 |           fileName: filePath.split('/').pop(),
         |               ^
      42 |           parsedAt: new Date().toISOString(),
      43 |           sectionCount: sections.length
      44 |         }

      at WordParser.parseDocument (src/parsers/wordParser.js:41:15)

Summary of all failing tests
 FAIL  tests/integration/api.test.js
  ● API Integration Tests › Multi-Section API › should fetch suggestions for multiple sections

    TypeError: Cannot read properties of undefined (reading 'full_coverage')

      152 |
      153 |       expect(response.data.success).toBe(true);
    > 154 |       expect(response.data.suggestions.full_coverage).toHaveLength(1);
          |                                        ^
      155 |     });
      156 |   });
      157 |

      at Object.full_coverage (tests/integration/api.test.js:154:40)

 FAIL  tests/unit/dashboard-ui.test.js (5.245 s)
  ● Dashboard UI/UX Tests › User Interactions › should filter sections by search query

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 3
    Received array:  [{"section_citation": "Article I, Section 1", "section_title": "Purpose"}, {"section_citation": "Article I, Section 2", "section_title": "Boundaries"}, {"section_citation": "Article II, Section 1", "section_title": "Meetings"}]

      427 |       const result = filterSections(sections, 'article i');
      428 |
    > 429 |       expect(result).toHaveLength(2);
          |                      ^
      430 |       expect(result.every(s => s.section_citation.startsWith('Article I'))).toBe(true);
      431 |     });
      432 |

      at Object.toHaveLength (tests/unit/dashboard-ui.test.js:429:22)

 FAIL  tests/unit/dashboard.test.js (5.382 s)
  ● Dashboard Unit Tests › Setup Status Check › should detect configured organization

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      53 |   describe('Setup Status Check', () => {
      54 |     test('should detect configured organization', async () => {
    > 55 |       mockSupabaseService.single.mockResolvedValue({
         |                                  ^
      56 |         data: { id: 'org-123', name: 'Test Org' },
      57 |         error: null
      58 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:55:34)

  ● Dashboard Unit Tests › Setup Status Check › should detect unconfigured system

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      75 |
      76 |     test('should detect unconfigured system', async () => {
    > 77 |       mockSupabaseService.single.mockResolvedValue({
         |                                  ^
      78 |         data: null,
      79 |         error: null
      80 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:77:34)

  ● Dashboard Unit Tests › Setup Status Check › should handle database errors gracefully

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

       96 |
       97 |     test('should handle database errors gracefully', async () => {
    >  98 |       mockSupabaseService.single.mockResolvedValue({
          |                                  ^
       99 |         data: null,
      100 |         error: { message: 'Connection failed' }
      101 |       });

      at Object.mockResolvedValue (tests/unit/dashboard.test.js:98:34)

  ● Dashboard Unit Tests › Dashboard Route Handler › should render dashboard with organization data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "dashboard", ObjectContaining {"organizationId": "org-123"}

    Number of calls: 0

      244 |       await dashboardHandler(req, res);
      245 |
    > 246 |       expect(res.render).toHaveBeenCalledWith('dashboard', expect.objectContaining({
          |                          ^
      247 |         organizationId: 'org-123'
      248 |       }));
      249 |     });

      at Object.toHaveBeenCalledWith (tests/unit/dashboard.test.js:246:26)

  ● Dashboard Unit Tests › Dashboard Route Handler › should handle database errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 500

    Number of calls: 0

      289 |       await dashboardHandler(req, res);
      290 |
    > 291 |       expect(res.status).toHaveBeenCalledWith(500);
          |                          ^
      292 |       expect(res.json).toHaveBeenCalledWith({ error: 'Database error' });
      293 |     });
      294 |   });

      at Object.toHaveBeenCalledWith (tests/unit/dashboard.test.js:291:26)

 FAIL  tests/setup/setup-middleware.test.js (6.194 s)
  ● Setup Middleware › requireSetupComplete › should redirect to /setup if not configured

    TypeError: requireSetupComplete is not a function

      50 |             const next = createMockNext();
      51 |
    > 52 |             requireSetupComplete(req, res, next);
         |             ^
      53 |
      54 |             expect(res.redirected).toBe(true);
      55 |             expect(res.redirectPath).toBe('/setup');

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:52:13)

  ● Setup Middleware › requireSetupComplete › should allow access if configured

    TypeError: requireSetupComplete is not a function

      62 |             const next = createMockNext();
      63 |
    > 64 |             requireSetupComplete(req, res, next);
         |             ^
      65 |
      66 |             expect(res.redirected).toBe(false);
      67 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:64:13)

  ● Setup Middleware › requireSetupComplete › should always allow /setup routes

    TypeError: requireSetupComplete is not a function

      73 |             const next = createMockNext();
      74 |
    > 75 |             requireSetupComplete(req, res, next);
         |             ^
      76 |
      77 |             expect(res.redirected).toBe(false);
      78 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:75:13)

  ● Setup Middleware › requireSetupComplete › should allow access to public assets

    TypeError: requireSetupComplete is not a function

      87 |                 const next = createMockNext();
      88 |
    > 89 |                 requireSetupComplete(req, res, next);
         |                 ^
      90 |
      91 |                 expect(res.redirected).toBe(false);
      92 |                 expect(next.called()).toBe(true);

      at requireSetupComplete (tests/setup/setup-middleware.test.js:89:17)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/setup/setup-middleware.test.js:84:25)

  ● Setup Middleware › requireSetupComplete › should allow health check endpoint

    TypeError: requireSetupComplete is not a function

       99 |             const next = createMockNext();
      100 |
    > 101 |             requireSetupComplete(req, res, next);
          |             ^
      102 |
      103 |             expect(res.redirected).toBe(false);
      104 |             expect(next.called()).toBe(true);

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:101:13)

  ● Setup Middleware › requireSetupComplete › should protect API routes if not configured

    TypeError: requireSetupComplete is not a function

      110 |             const next = createMockNext();
      111 |
    > 112 |             requireSetupComplete(req, res, next);
          |             ^
      113 |
      114 |             expect(res.redirected).toBe(true);
      115 |             expect(res.redirectPath).toBe('/setup');

      at Object.requireSetupComplete (tests/setup/setup-middleware.test.js:112:13)

  ● Setup Middleware › preventSetupIfConfigured › should redirect to dashboard if already configured

    TypeError: preventSetupIfConfigured is not a function

      123 |             const next = createMockNext();
      124 |
    > 125 |             preventSetupIfConfigured(req, res, next);
          |             ^
      126 |
      127 |             expect(res.redirected).toBe(true);
      128 |             expect(res.redirectPath).toBe('/dashboard');

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:125:13)

  ● Setup Middleware › preventSetupIfConfigured › should allow setup access if not configured

    TypeError: preventSetupIfConfigured is not a function

      135 |             const next = createMockNext();
      136 |
    > 137 |             preventSetupIfConfigured(req, res, next);
          |             ^
      138 |
      139 |             expect(res.redirected).toBe(false);
      140 |             expect(next.called()).toBe(true);

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:137:13)

  ● Setup Middleware › preventSetupIfConfigured › should not affect non-setup routes

    TypeError: preventSetupIfConfigured is not a function

      146 |             const next = createMockNext();
      147 |
    > 148 |             preventSetupIfConfigured(req, res, next);
          |             ^
      149 |
      150 |             expect(res.redirected).toBe(false);
      151 |             expect(next.called()).toBe(true);

      at Object.preventSetupIfConfigured (tests/setup/setup-middleware.test.js:148:13)

  ● Setup Middleware › checkSetupStatus › should return false if organization table does not exist

    TypeError: checkSetupStatus is not a function

      164 |             };
      165 |
    > 166 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      167 |             expect(result).toBe(false);
      168 |         });
      169 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:166:34)

  ● Setup Middleware › checkSetupStatus › should return false if no organization exists

    TypeError: checkSetupStatus is not a function

      178 |             };
      179 |
    > 180 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      181 |             expect(result).toBe(false);
      182 |         });
      183 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:180:34)

  ● Setup Middleware › checkSetupStatus › should return true if organization is configured

    TypeError: checkSetupStatus is not a function

      192 |             };
      193 |
    > 194 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      195 |             expect(result).toBe(true);
      196 |         });
      197 |

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:194:34)

  ● Setup Middleware › checkSetupStatus › should handle database errors gracefully

    TypeError: checkSetupStatus is not a function

      203 |             };
      204 |
    > 205 |             const result = await checkSetupStatus(mockDb);
          |                                  ^
      206 |             expect(result).toBe(false);
      207 |         });
      208 |     });

      at Object.checkSetupStatus (tests/setup/setup-middleware.test.js:205:34)

  ● Setup Middleware › initializeSetupStatus › should set app.locals.isConfigured to true if configured

    TypeError: initializeSetupStatus is not a function

      220 |             };
      221 |
    > 222 |             const result = await initializeSetupStatus(mockApp, mockDb);
          |                                  ^
      223 |
      224 |             expect(result).toBe(true);
      225 |             expect(mockApp.locals.isConfigured).toBe(true);

      at Object.initializeSetupStatus (tests/setup/setup-middleware.test.js:222:34)

  ● Setup Middleware › initializeSetupStatus › should set app.locals.isConfigured to false if not configured

    TypeError: initializeSetupStatus is not a function

      232 |             };
      233 |
    > 234 |             const result = await initializeSetupStatus(mockApp, mockDb);
          |                                  ^
      235 |
      236 |             expect(result).toBe(false);
      237 |             expect(mockApp.locals.isConfigured).toBe(false);

      at Object.initializeSetupStatus (tests/setup/setup-middleware.test.js:234:34)

 FAIL  tests/unit/roleAuth.test.js (6.737 s)
  ● Role Authorization Tests › isGlobalAdmin › should return true for global admin user

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      82 |
      83 |       const result = await isGlobalAdmin(req);
    > 84 |       expect(result).toBe(true);
         |                      ^
      85 |     });
      86 |
      87 |     test('should return false for non-admin user', async () => {

      at Object.toBe (tests/unit/roleAuth.test.js:84:22)

  ● Role Authorization Tests › getAccessibleOrganizations › should return all organizations for global admin

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

      156 |
      157 |       const result = await getAccessibleOrganizations(req);
    > 158 |       expect(result).toHaveLength(2);
          |                      ^
      159 |       expect(result[0].name).toBe('Org A');
      160 |     });
      161 |

      at Object.toHaveLength (tests/unit/roleAuth.test.js:158:22)

  ● Role Authorization Tests › getAccessibleOrganizations › should return only user organizations for regular user

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      171 |
      172 |       const result = await getAccessibleOrganizations(req);
    > 173 |       expect(result).toHaveLength(1);
          |                      ^
      174 |       expect(result[0].name).toBe('My Org');
      175 |       expect(result[0].role).toBe('admin');
      176 |     });

      at Object.toHaveLength (tests/unit/roleAuth.test.js:173:22)

  ● Role Authorization Tests › attachGlobalAdminStatus middleware › should attach admin status and organizations to request

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      219 |       await attachGlobalAdminStatus(req, {}, next);
      220 |
    > 221 |       expect(req.isGlobalAdmin).toBe(true);
          |                                 ^
      222 |       expect(req.accessibleOrganizations).toHaveLength(1);
      223 |       expect(nextCalled).toBe(true);
      224 |     });

      at Object.toBe (tests/unit/roleAuth.test.js:221:33)

  ● Role Authorization Tests › Permission Boundary Tests › should enforce organization access control

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      314 |       const orgs = await getAccessibleOrganizations(req);
      315 |
    > 316 |       expect(orgs).toHaveLength(1);
          |                    ^
      317 |       expect(orgs.find(o => o.id === '999')).toBeUndefined();
      318 |     });
      319 |

      at Object.toHaveLength (tests/unit/roleAuth.test.js:316:20)

  ● Role Authorization Tests › Role-Based Access Control › should differentiate between admin and member roles

    TypeError: Cannot read properties of undefined (reading 'role')

      380 |       const memberOrg = orgs.find(o => o.id === '2');
      381 |
    > 382 |       expect(adminOrg.role).toBe('admin');
          |                       ^
      383 |       expect(memberOrg.role).toBe('member');
      384 |     });
      385 |

      at Object.role (tests/unit/roleAuth.test.js:382:23)

  ● Role Authorization Tests › Role-Based Access Control › should handle multiple roles across organizations

    expect(received).toHaveLength(expected)

    Expected length: 3
    Received length: 0
    Received array:  []

      398 |       const orgs = await getAccessibleOrganizations(req);
      399 |
    > 400 |       expect(orgs).toHaveLength(3);
          |                    ^
      401 |       expect(orgs.map(o => o.role)).toEqual(['admin', 'member', 'reviewer']);
      402 |     });
      403 |   });

      at Object.toHaveLength (tests/unit/roleAuth.test.js:400:20)

 FAIL  tests/security/rls-dashboard.test.js (6.764 s)
  ● RLS Dashboard Security Tests › Organization Data Isolation › should block access to other organization sections

    expect(received).toBeDefined()

    Received: undefined

      65 |
      66 |       // RLS policy should filter this out
    > 67 |       expect(data).toBeDefined();
         |                    ^
      68 |     });
      69 |
      70 |     test('should enforce RLS on bylaw_suggestions', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:67:20)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block INSERT without organization_id

    expect(received).toBeDefined()

    Received: undefined

      135 |         });
      136 |
    > 137 |       expect(error).toBeDefined();
          |                     ^
      138 |       expect(error.message).toContain('organization_id');
      139 |     });
      140 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:137:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block INSERT with wrong organization_id

    expect(received).toBeDefined()

    Received: undefined

      154 |         });
      155 |
    > 156 |       expect(error).toBeDefined();
          |                     ^
      157 |     });
      158 |
      159 |     test('should block UPDATE of other organization data', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:156:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block UPDATE of other organization data

    expect(received).toBeDefined()

    Received: undefined

      168 |         .eq('organization_id', 'org-2'); // Not user's org
      169 |
    > 170 |       expect(error).toBeDefined();
          |                     ^
      171 |     });
      172 |
      173 |     test('should block DELETE of other organization data', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:170:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should block DELETE of other organization data

    expect(received).toBeDefined()

    Received: undefined

      182 |         .eq('organization_id', 'org-2');
      183 |
    > 184 |       expect(error).toBeDefined();
          |                     ^
      185 |     });
      186 |
      187 |     test('should prevent SQL injection through organization_id', async () => {

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:184:21)

  ● RLS Dashboard Security Tests › Unauthorized Access Attempts › should prevent SQL injection through organization_id

    expect(received).toBeDefined()

    Received: undefined

      199 |
      200 |       // Should safely handle malicious input
    > 201 |       expect(data).toBeDefined();
          |                    ^
      202 |       expect(Array.isArray(data)).toBe(true);
      203 |     });
      204 |   });

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:201:20)

  ● RLS Dashboard Security Tests › RLS Policy Enforcement › should apply SELECT policy for authenticated users

    TypeError: Cannot read properties of undefined (reading 'every')

      224 |
      225 |       expect(result.success).toBe(true);
    > 226 |       expect(result.data.every(s => s.organization_id === 'org-1')).toBe(true);
          |                          ^
      227 |     });
      228 |
      229 |     test('should apply INSERT policy for authenticated users', async () => {

      at Object.every (tests/security/rls-dashboard.test.js:226:26)

  ● RLS Dashboard Security Tests › Service Role vs User Role › service role should bypass RLS for all organizations

    expect(received).toBeDefined()

    Received: undefined

      322 |
      323 |       // Service role sees all orgs
    > 324 |       expect(data).toBeDefined();
          |                    ^
      325 |       expect(data.length).toBeGreaterThan(1);
      326 |     });
      327 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:324:20)

  ● RLS Dashboard Security Tests › Service Role vs User Role › user role should only see own organization

    expect(received).toBeDefined()

    Received: undefined

      340 |         .eq('organization_id', 'org-1');
      341 |
    > 342 |       expect(data).toBeDefined();
          |                    ^
      343 |       expect(data.every(s => s.organization_id === 'org-1')).toBe(true);
      344 |     });
      345 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:342:20)

  ● RLS Dashboard Security Tests › RLS Edge Cases › should handle NULL organization_id

    expect(received).toBeDefined()

    Received: undefined

      400 |
      401 |       // RLS should block records with NULL organization_id
    > 402 |       expect(data).toBeDefined();
          |                    ^
      403 |       expect(Array.isArray(data)).toBe(true);
      404 |     });
      405 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:402:20)

  ● RLS Dashboard Security Tests › RLS Edge Cases › should handle RLS with JOIN queries

    expect(received).toBeDefined()

    Received: undefined

      446 |         .eq('organization_id', 'org-1');
      447 |
    > 448 |       expect(data).toBeDefined();
          |                    ^
      449 |       // Both tables should enforce RLS
      450 |     });
      451 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:448:20)

  ● RLS Dashboard Security Tests › Security Best Practices › should use prepared statements to prevent injection

    expect(received).toBeDefined()

    Received: undefined

      509 |
      510 |       // Should safely handle malicious input
    > 511 |       expect(data).toBeDefined();
          |                    ^
      512 |       expect(Array.isArray(data)).toBe(true);
      513 |     });
      514 |

      at Object.toBeDefined (tests/security/rls-dashboard.test.js:511:20)

 FAIL  tests/performance/dashboard-performance.test.js (7.265 s)
  ● Dashboard Performance Tests › Large Dataset Handling › should handle bulk inserts efficiently

    TypeError: mockSupabase.from(...).insert is not a function

      368 |       await mockSupabase
      369 |         .from('bylaw_sections')
    > 370 |         .insert(bulkSections);
          |          ^
      371 |
      372 |       const duration = performance.now() - startTime;
      373 |

      at Object.insert (tests/performance/dashboard-performance.test.js:370:10)

 FAIL  tests/success-redirect.test.js
  ● Test suite failed to run

    Your test suite must contain at least one test.

      at onResult (node_modules/@jest/core/build/index.js:1057:18)
      at node_modules/@jest/core/build/index.js:1127:165
      at node_modules/emittery/index.js:363:13
          at Array.map (<anonymous>)
      at Emittery.emit (node_modules/emittery/index.js:361:23)

 FAIL  tests/integration/dashboard-flow.test.js (7.853 s)
  ● Multi-Tenancy Tests › Organization Isolation › should isolate data between organizations

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.073Z, "id": "sec-1760399548073", "organization_id": "org-1760399548073", "title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:28.074Z, "id": "sec-1760399548074", "organization_id": "org-1760399548073", "title": "Org 2 Section"}]

      93 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      94 |
    > 95 |       expect(org1Sections).toHaveLength(1);
         |                            ^
      96 |       expect(org2Sections).toHaveLength(1);
      97 |       expect(org1Sections[0].title).toBe('Org 1 Section');
      98 |       expect(org2Sections[0].title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/unit/multitenancy.test.js:95:28)

  ● Multi-Tenancy Tests › Organization Isolation › should prevent cross-organization data access

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  [{"created_at": 2025-10-13T23:52:28.086Z, "id": "sec-1760399548086", "organization_id": "org-1760399548086", "title": "Secret Section"}]

      107 |       const result = await db.crossOrgQuery(org1.id, org2.id);
      108 |
    > 109 |       expect(result.org1).toHaveLength(0);
          |                           ^
      110 |       expect(result.org2).toHaveLength(0); // RLS prevents access
      111 |     });
      112 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:109:27)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should handle multiple organizations simultaneously

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  [{"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org A Section"}, {"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org B Section"}, {"created_at": 2025-10-13T23:52:28.088Z, "id": "sec-1760399548088", "organization_id": "org-1760399548088", "title": "Org C Section"}]

      137 |       for (const org of orgs) {
      138 |         const sections = await db.getSectionsByOrg(org.id);
    > 139 |         expect(sections).toHaveLength(1);
          |                          ^
      140 |         expect(sections[0].title).toContain(org.name);
      141 |       }
      142 |     });

      at Object.toHaveLength (tests/unit/multitenancy.test.js:139:26)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should prevent data leaks during concurrent operations

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section 1"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section 2"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section A"}, {"created_at": 2025-10-13T23:52:28.089Z, "id": "sec-1760399548089", "organization_id": "org-1760399548089", "title": "Section B"}]

      157 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      158 |
    > 159 |       expect(org1Sections).toHaveLength(2);
          |                            ^
      160 |       expect(org2Sections).toHaveLength(2);
      161 |
      162 |       // Verify no cross-contamination

      at Object.toHaveLength (tests/unit/multitenancy.test.js:159:28)

  ● Multi-Tenancy Tests › Security Policies › should enforce row-level security

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.100Z, "id": "sec-1760399548100", "organization_id": "org-1760399548100", "title": "Public Section"}, {"created_at": 2025-10-13T23:52:28.100Z, "id": "sec-1760399548100", "organization_id": "org-1760399548100", "title": "Private Section"}]

      289 |       const visibleSections = await db.getSectionsByOrg(org1.id);
      290 |
    > 291 |       expect(visibleSections).toHaveLength(1);
          |                               ^
      292 |       expect(visibleSections[0].title).toBe('Public Section');
      293 |     });
      294 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:291:31)

  ● Multi-Tenancy Tests › Security Policies › should prevent unauthorized data modification

    expect(received).not.toContain(expected) // indexOf

    Expected value: not {"created_at": 2025-10-13T23:52:28.101Z, "id": "sec-1760399548101", "organization_id": "org-1760399548101", "title": "Locked Section"}
    Received array:     [{"created_at": 2025-10-13T23:52:28.101Z, "id": "sec-1760399548101", "organization_id": "org-1760399548101", "title": "Locked Section"}]

      302 |       const org1Sections = await db.getSectionsByOrg(org1.id);
      303 |
    > 304 |       expect(org1Sections).not.toContain(section);
          |                                ^
      305 |     });
      306 |   });
      307 | });

      at Object.toContain (tests/unit/multitenancy.test.js:304:32)

  ● Dashboard Flow Integration Tests › Multi-Tenant Data Isolation › should isolate data between concurrent users

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:28.106Z, "id": "sec-1760399548106", "organization_id": "org-1760399548106", "section_title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:28.106Z, "id": "sec-1760399548106", "organization_id": "org-1760399548106", "section_title": "Org 2 Section"}]

      185 |       const org2Sections = await db.getSectionsByOrg(session2.organizationId);
      186 |
    > 187 |       expect(org1Sections).toHaveLength(1);
          |                            ^
      188 |       expect(org2Sections).toHaveLength(1);
      189 |       expect(org1Sections[0].section_title).toBe('Org 1 Section');
      190 |       expect(org2Sections[0].section_title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/integration/dashboard-flow.test.js:187:28)

  ● Dashboard Flow Integration Tests › Dashboard API Endpoints › should fetch sections with organization filter

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: undefined

      246 |
      247 |       expect(response.success).toBe(true);
    > 248 |       expect(response.sections).toHaveLength(2);
          |                                 ^
      249 |     });
      250 |
      251 |     test('should create suggestion with organization context', async () => {

      at Object.toHaveLength (tests/integration/dashboard-flow.test.js:248:33)

  ● Dashboard Flow Integration Tests › Error Recovery › should recover from database connection loss

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: undefined

      365 |       const sections = await getSectionsWithRetry(mockSupabase, 'org-123', 1);
      366 |
    > 367 |       expect(sections).toEqual([]);
          |                        ^
      368 |     });
      369 |
      370 |     test('should handle partial data load failures', async () => {

      at Object.toEqual (tests/integration/dashboard-flow.test.js:367:24)

  ● Dashboard Flow Integration Tests › Performance and Scalability › should cache frequently accessed data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      455 |
      456 |       // Should hit cache
    > 457 |       expect(cache.has('org-123')).toBe(true);
          |                                    ^
      458 |     });
      459 |   });
      460 | });

      at Object.toBe (tests/integration/dashboard-flow.test.js:457:36)

 FAIL  tests/unit/parsers.test.js (9.134 s)
  ● Document Parser Tests › Article/Section Format (Traditional) › should handle multiple articles

    expect(received).toBe(expected) // Object.is equality

    Expected: "I"
    Received: "II"

      102 |
      103 |       expect(sections).toHaveLength(2);
    > 104 |       expect(sections[0].hierarchy.article.number).toBe('I');
          |                                                    ^
      105 |       expect(sections[1].hierarchy.article.number).toBe('II');
      106 |     });
      107 |

      at Object.toBe (tests/unit/parsers.test.js:104:52)

  ● Document Parser Tests › Edge Cases › should handle empty sections gracefully

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"hierarchy": {"article": {"name": "TEST", "number": "I"}, "chapter": null, "section": {"number": "2", "title": "Has Content"}}, "text": "Some content here."}]

      175 |       const sections = parseDocumentHierarchy(content);
      176 |
    > 177 |       expect(sections).toHaveLength(2);
          |                        ^
      178 |       expect(sections[0].text).toBe('');
      179 |       expect(sections[1].text).toContain('content');
      180 |     });

      at Object.toHaveLength (tests/unit/parsers.test.js:177:24)

  ● Document Parser Tests › Edge Cases › should preserve whitespace within content

    expect(received).toContain(expected) // indexOf

    Expected substring: "  Indented"
    Received string:    "Indented text
        More indent
      Back to first level"

      203 |       const sections = parseDocumentHierarchy(content);
      204 |
    > 205 |       expect(sections[0].text).toContain('  Indented');
          |                                ^
      206 |       expect(sections[0].text).toContain('    More indent');
      207 |     });
      208 |

      at Object.toContain (tests/unit/parsers.test.js:205:32)

  ● Parser Performance › should parse large documents efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: 100
    Received: 101

      294 |     const duration = Date.now() - startTime;
      295 |
    > 296 |     expect(sections.length).toBe(100);
          |                             ^
      297 |     expect(duration).toBeLessThan(1000); // Should parse in < 1 second
      298 |   });
      299 | });

      at Object.toBe (tests/unit/parsers.test.js:296:29)

 FAIL  tests/unit/wordParser.edge-cases.test.js (9.607 s)
  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle undefined hierarchy levels array

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:36:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:37:14)

      35 |       expect(() => {
      36 |         wordParser.enrichSections(sections, configWithUndefinedLevels);
    > 37 |       }).not.toThrow();
         |              ^
      38 |
      39 |       const result = wordParser.enrichSections(sections, configWithUndefinedLevels);
      40 |       expect(result).toHaveLength(1);

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:37:14)

  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle missing hierarchy config entirely

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:60:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:61:14)

      59 |       expect(() => {
      60 |         wordParser.enrichSections(sections, configWithNoHierarchy);
    > 61 |       }).not.toThrow();
         |              ^
      62 |
      63 |       const result = wordParser.enrichSections(sections, configWithNoHierarchy);
      64 |       expect(result[0].depth).toBe(0);

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:61:14)

  ● Word Parser - Critical Edge Cases › Issue #1: Undefined Level Handling › should handle null hierarchy config

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:112:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:113:14)

      111 |       expect(() => {
      112 |         wordParser.enrichSections(sections, configWithNullHierarchy);
    > 113 |       }).not.toThrow();
          |              ^
      114 |     });
      115 |
      116 |     test('should use level defaults when levelDef not found', () => {

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:113:14)

  ● Word Parser - Critical Edge Cases › Text Normalization Edge Cases › should handle multiple spaces and tabs

    expect(received).toBe(expected) // Object.is equality

    Expected: "SECTION 1: PURPOSE"
    Received: "SECTION 1:"

      318 |       const normalized = wordParser.normalizeForMatching(text);
      319 |
    > 320 |       expect(normalized).toBe('SECTION 1: PURPOSE');
          |                          ^
      321 |     });
      322 |
      323 |     test('should normalize case consistently', () => {

      at Object.toBe (tests/unit/wordParser.edge-cases.test.js:320:26)

  ● Word Parser - Critical Edge Cases › Orphaned Content Handling › should not capture TOC lines as orphans

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      388 |       // TOC lines should not create orphan sections
      389 |       const orphans = result.filter(s => s.isOrphan);
    > 390 |       expect(orphans.length).toBe(0);
          |                              ^
      391 |     });
      392 |
      393 |     test('should skip trivial orphaned content', () => {

      at Object.toBe (tests/unit/wordParser.edge-cases.test.js:390:30)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle very large documents efficiently

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:590:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle sections with special characters

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:607:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle Unicode characters

    Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support.

      583 |     const hierarchy = organizationConfig.hierarchy;
      584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
    > 585 |       throw new Error(
          |             ^
      586 |         'Invalid hierarchy configuration: levels array is required. ' +
      587 |         'Please check organization setup or contact support.'
      588 |       );

      at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
      at Object.enrichSections (tests/unit/wordParser.edge-cases.test.js:623:35)

  ● Word Parser - Critical Edge Cases › Performance and Edge Cases › should handle extremely long text content

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "Invalid hierarchy configuration: levels array is required. Please check organization setup or contact support."

          583 |     const hierarchy = organizationConfig.hierarchy;
          584 |     if (!hierarchy || !hierarchy.levels || !Array.isArray(hierarchy.levels)) {
        > 585 |       throw new Error(
              |             ^
          586 |         'Invalid hierarchy configuration: levels array is required. ' +
          587 |         'Please check organization setup or contact support.'
          588 |       );

          at WordParser.enrichSections (src/parsers/wordParser.js:585:13)
          at enrichSections (tests/unit/wordParser.edge-cases.test.js:645:20)
          at Object.<anonymous> (node_modules/expect/build/index.js:1824:9)
          at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:2235:93)
          at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:646:14)

      644 |       expect(() => {
      645 |         wordParser.enrichSections(sections, { hierarchy: {} });
    > 646 |       }).not.toThrow();
          |              ^
      647 |     });
      648 |   });
      649 | });

      at Object.toThrow (tests/unit/wordParser.edge-cases.test.js:646:14)

 FAIL  tests/unit/multitenancy.test.js (7.676 s)
  ● Multi-Tenancy Tests › Organization Isolation › should isolate data between organizations

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:31.194Z, "id": "sec-1760399551194", "organization_id": "org-1760399551194", "title": "Org 1 Section"}, {"created_at": 2025-10-13T23:52:31.194Z, "id": "sec-1760399551194", "organization_id": "org-1760399551194", "title": "Org 2 Section"}]

      93 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      94 |
    > 95 |       expect(org1Sections).toHaveLength(1);
         |                            ^
      96 |       expect(org2Sections).toHaveLength(1);
      97 |       expect(org1Sections[0].title).toBe('Org 1 Section');
      98 |       expect(org2Sections[0].title).toBe('Org 2 Section');

      at Object.toHaveLength (tests/unit/multitenancy.test.js:95:28)

  ● Multi-Tenancy Tests › Organization Isolation › should prevent cross-organization data access

    expect(received).toHaveLength(expected)

    Expected length: 0
    Received length: 1
    Received array:  [{"created_at": 2025-10-13T23:52:31.205Z, "id": "sec-1760399551205", "organization_id": "org-1760399551205", "title": "Secret Section"}]

      107 |       const result = await db.crossOrgQuery(org1.id, org2.id);
      108 |
    > 109 |       expect(result.org1).toHaveLength(0);
          |                           ^
      110 |       expect(result.org2).toHaveLength(0); // RLS prevents access
      111 |     });
      112 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:109:27)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should handle multiple organizations simultaneously

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 3
    Received array:  [{"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org A Section"}, {"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org B Section"}, {"created_at": 2025-10-13T23:52:31.206Z, "id": "sec-1760399551206", "organization_id": "org-1760399551206", "title": "Org C Section"}]

      137 |       for (const org of orgs) {
      138 |         const sections = await db.getSectionsByOrg(org.id);
    > 139 |         expect(sections).toHaveLength(1);
          |                          ^
      140 |         expect(sections[0].title).toContain(org.name);
      141 |       }
      142 |     });

      at Object.toHaveLength (tests/unit/multitenancy.test.js:139:26)

  ● Multi-Tenancy Tests › Concurrent Organization Usage › should prevent data leaks during concurrent operations

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section 1"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section 2"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section A"}, {"created_at": 2025-10-13T23:52:31.207Z, "id": "sec-1760399551207", "organization_id": "org-1760399551207", "title": "Section B"}]

      157 |       const org2Sections = await db.getSectionsByOrg(org2.id);
      158 |
    > 159 |       expect(org1Sections).toHaveLength(2);
          |                            ^
      160 |       expect(org2Sections).toHaveLength(2);
      161 |
      162 |       // Verify no cross-contamination

      at Object.toHaveLength (tests/unit/multitenancy.test.js:159:28)

  ● Multi-Tenancy Tests › Security Policies › should enforce row-level security

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"created_at": 2025-10-13T23:52:31.218Z, "id": "sec-1760399551218", "organization_id": "org-1760399551218", "title": "Public Section"}, {"created_at": 2025-10-13T23:52:31.218Z, "id": "sec-1760399551218", "organization_id": "org-1760399551218", "title": "Private Section"}]

      289 |       const visibleSections = await db.getSectionsByOrg(org1.id);
      290 |
    > 291 |       expect(visibleSections).toHaveLength(1);
          |                               ^
      292 |       expect(visibleSections[0].title).toBe('Public Section');
      293 |     });
      294 |

      at Object.toHaveLength (tests/unit/multitenancy.test.js:291:31)

  ● Multi-Tenancy Tests › Security Policies › should prevent unauthorized data modification

    expect(received).not.toContain(expected) // indexOf

    Expected value: not {"created_at": 2025-10-13T23:52:31.219Z, "id": "sec-1760399551219", "organization_id": "org-1760399551219", "title": "Locked Section"}
    Received array:     [{"created_at": 2025-10-13T23:52:31.219Z, "id": "sec-1760399551219", "organization_id": "org-1760399551219", "title": "Locked Section"}]

      302 |       const org1Sections = await db.getSectionsByOrg(org1.id);
      303 |
    > 304 |       expect(org1Sections).not.toContain(section);
          |                                ^
      305 |     });
      306 |   });
      307 | });

      at Object.toContain (tests/unit/multitenancy.test.js:304:32)

 FAIL  tests/setup/setup-routes.test.js
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/setup/setup-routes.test.js'

       5 |
       6 | const express = require('express');
    >  7 | const request = require('supertest');
         |                 ^
       8 |
       9 | // Validation helpers
      10 | function validateOrganizationData(data) {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.require (tests/setup/setup-routes.test.js:7:17)

 FAIL  tests/integration/admin-api.test.js (11.382 s)
  ● Admin API Integration Tests › POST /admin/organization/:id/delete › should delete organization with confirmation

    TypeError: req.supabaseService.from(...).delete(...).eq is not a function

      319 |       };
      320 |
    > 321 |       const result = await req.supabaseService.from('organizations').delete().eq('id', '1');
          |                                                                               ^
      322 |
      323 |       expect(result.error).toBeNull();
      324 |     });

      at Object.eq (tests/integration/admin-api.test.js:321:79)

  ● Admin API Integration Tests › POST /admin/organization/:id/delete › should handle deletion errors

    TypeError: req.supabaseService.from(...).delete(...).eq is not a function

      352 |       };
      353 |
    > 354 |       const result = await req.supabaseService.from('organizations').delete().eq('id', '1');
          |                                                                               ^
      355 |
      356 |       expect(result.error).toBeTruthy();
      357 |     });

      at Object.eq (tests/integration/admin-api.test.js:354:79)

 FAIL  tests/unit/wordParser.orphan.test.js (12.483 s)
  ● Word Parser - Orphaned Content Capture › Missing Section Numbers › should handle documents with duplicate numbers

    expect(received).toContain(expected) // indexOf

    Expected substring: "First occurrence"
    Received string:    " Second occurrence of Section 1."

      133 |
      134 |       const totalText = sections.map(s => s.text || '').join(' ');
    > 135 |       expect(totalText).toContain('First occurrence');
          |                         ^
      136 |       expect(totalText).toContain('Second occurrence');
      137 |     });
      138 |

      at Object.toContain (tests/unit/wordParser.orphan.test.js:135:25)

 FAIL  tests/setup-parser-integration.test.js (9.509 s)
  ● Setup Route Integration › setup route case statement is updated

    expect(received).toContain(expected) // indexOf

    Expected substring: "case 'import'"
    Received string:    "function router(req, res, next) {
        router.handle(req, res, next);
      }"

      88 |
      89 |     // Verify the import case has been updated
    > 90 |     expect(routeString).toContain('case \'import\'');
         |                         ^
      91 |     expect(routeString).toContain('setupService');
      92 |     expect(routeString).toContain('processDocumentImport');
      93 |   });

      at Object.toContain (tests/setup-parser-integration.test.js:90:25)


Test Suites: 16 failed, 14 passed, 30 total
Tests:       75 failed, 3 skipped, 494 passed, 572 total
Snapshots:   0 total
Time:        24.786 s
Ran all test suites.
mgall@mother:/mnt/c/Users/mgall/OneDrive/Desktop/BYLAWSCOMMITTEE/BYLAWSTOOL_Generalized$
Test Suites: 16 failed, 14 passed, 30 total
Tests:       75 failed, 3 skipped, 494 passed, 572 total
Snapshots:   0 total
Time:        24.786 s
Ran all test suites.