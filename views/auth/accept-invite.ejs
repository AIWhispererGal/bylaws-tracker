<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Accept Invitation - Bylaws Amendment Tracker</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --border-radius: 12px;
    }

    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }

    .auth-container {
      background: white;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
      padding: 3rem;
      max-width: 480px;
      width: 100%;
      margin: 2rem;
    }

    .auth-header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .auth-icon {
      font-size: 3.5rem;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 1rem;
    }

    .auth-header h1 {
      color: #2d3748;
      font-size: 1.75rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .auth-header p {
      color: #6c757d;
      font-size: 1rem;
    }

    .invitation-details {
      background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
      border-radius: 12px;
      padding: 1.5rem;
      margin-bottom: 2rem;
      border: 2px solid rgba(102, 126, 234, 0.2);
    }

    .invitation-details h3 {
      color: #2d3748;
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }

    .invitation-detail-item {
      display: flex;
      align-items: center;
      margin-bottom: 0.75rem;
      color: #4a5568;
    }

    .invitation-detail-item i {
      margin-right: 0.75rem;
      color: #667eea;
      font-size: 1.25rem;
    }

    .invitation-detail-item strong {
      margin-left: 0.5rem;
      color: #2d3748;
    }

    .form-label {
      font-weight: 600;
      color: #2d3748;
      margin-bottom: 0.5rem;
    }

    .form-control {
      border: 2px solid #e5e7eb;
      border-radius: 10px;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      transition: all 0.3s ease;
    }

    .form-control:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
    }

    .form-control:disabled,
    .form-control:read-only {
      background-color: #f9fafb;
      border-color: #e5e7eb;
      color: #6c757d;
    }

    .input-group {
      position: relative;
    }

    .input-group-text {
      background: transparent;
      border: 2px solid #e5e7eb;
      border-right: none;
      border-radius: 10px 0 0 10px;
      color: #6c757d;
    }

    .input-group .form-control {
      border-left: none;
      border-radius: 0 10px 10px 0;
    }

    .input-group:focus-within .input-group-text {
      border-color: #667eea;
    }

    .btn-accept {
      background: var(--primary-gradient);
      border: none;
      color: white;
      font-weight: 600;
      padding: 0.875rem;
      border-radius: 10px;
      width: 100%;
      font-size: 1rem;
      transition: all 0.3s ease;
      margin-top: 1rem;
    }

    .btn-accept:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
    }

    .btn-accept:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }

    .password-requirements {
      font-size: 0.875rem;
      color: #6c757d;
      margin-top: 0.5rem;
      padding-left: 1rem;
    }

    .password-requirements li {
      margin-bottom: 0.25rem;
    }

    .alert {
      border-radius: 10px;
      margin-bottom: 1.5rem;
      border: none;
    }

    .alert-danger {
      background-color: #fee2e2;
      color: #991b1b;
    }

    .alert-success {
      background-color: #d1fae5;
      color: #065f46;
    }

    .role-badge {
      display: inline-block;
      padding: 0.25rem 0.75rem;
      border-radius: 6px;
      font-size: 0.875rem;
      font-weight: 600;
      text-transform: capitalize;
    }

    .role-badge.admin {
      background-color: #dbeafe;
      color: #1e40af;
    }

    .role-badge.member {
      background-color: #e0e7ff;
      color: #4338ca;
    }

    .role-badge.viewer {
      background-color: #e5e7eb;
      color: #374151;
    }

    .role-badge.owner {
      background-color: #fef3c7;
      color: #92400e;
    }

    /* Loading spinner */
    .spinner-border-sm {
      width: 1rem;
      height: 1rem;
      border-width: 0.15em;
    }

    /* Mobile responsiveness */
    @media (max-width: 576px) {
      .auth-container {
        padding: 2rem 1.5rem;
        margin: 1rem;
      }

      .auth-header h1 {
        font-size: 1.5rem;
      }

      .invitation-details {
        padding: 1rem;
      }
    }

    /* Accessibility */
    *:focus-visible {
      outline: 2px solid #667eea;
      outline-offset: 2px;
    }
  </style>
</head>
<body>
  <div class="auth-container">
    <div class="auth-header">
      <div class="auth-icon">
        <i class="bi bi-envelope-check"></i>
      </div>
      <h1>Accept Invitation</h1>
      <p>You've been invited to join an organization</p>
    </div>

    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-danger" role="alert" aria-live="polite">
        <i class="bi bi-exclamation-triangle me-2"></i>
        <%= error %>
      </div>
    <% } %>

    <div class="invitation-details">
      <h3>Invitation Details</h3>
      <div class="invitation-detail-item">
        <i class="bi bi-building"></i>
        <span>Organization:</span>
        <strong><%= invitation.organization.name %></strong>
      </div>
      <div class="invitation-detail-item">
        <i class="bi bi-envelope"></i>
        <span>Email:</span>
        <strong><%= email %></strong>
      </div>
      <div class="invitation-detail-item">
        <i class="bi bi-person-badge"></i>
        <span>Role:</span>
        <span class="role-badge <%= invitation.role %>"><%= invitation.role %></span>
      </div>
      <% if (invitation.expires_at) { %>
        <div class="invitation-detail-item">
          <i class="bi bi-clock"></i>
          <span>Expires:</span>
          <strong><%= new Date(invitation.expires_at).toLocaleDateString() %></strong>
        </div>
      <% } %>
    </div>

    <form id="acceptInviteForm" action="/auth/accept-invite" method="POST" novalidate>
      <input type="hidden" name="token" value="<%= invitation.token %>">

      <div class="mb-3">
        <label for="email" class="form-label">
          Email Address
        </label>
        <div class="input-group">
          <span class="input-group-text">
            <i class="bi bi-envelope"></i>
          </span>
          <input
            type="email"
            class="form-control"
            id="email"
            name="email"
            value="<%= email %>"
            readonly
            disabled
          >
        </div>
      </div>

      <div class="mb-3">
        <label for="full_name" class="form-label">
          Full Name <span class="text-danger">*</span>
        </label>
        <div class="input-group">
          <span class="input-group-text">
            <i class="bi bi-person"></i>
          </span>
          <input
            type="text"
            class="form-control"
            id="full_name"
            name="full_name"
            placeholder="Enter your full name"
            required
            autocomplete="name"
            aria-required="true"
            minlength="2"
            maxlength="255"
          >
        </div>
        <div class="invalid-feedback"></div>
      </div>

      <div class="mb-3">
        <label for="password" class="form-label">
          Password <span class="text-danger">*</span>
        </label>
        <div class="input-group">
          <span class="input-group-text">
            <i class="bi bi-lock"></i>
          </span>
          <input
            type="password"
            class="form-control"
            id="password"
            name="password"
            placeholder="Create a secure password"
            required
            autocomplete="new-password"
            aria-required="true"
            minlength="8"
          >
        </div>
        <ul class="password-requirements">
          <li>At least 8 characters long</li>
          <li>Include uppercase and lowercase letters</li>
          <li>Include at least one number</li>
        </ul>
        <div class="invalid-feedback"></div>
      </div>

      <div class="mb-3">
        <label for="confirm_password" class="form-label">
          Confirm Password <span class="text-danger">*</span>
        </label>
        <div class="input-group">
          <span class="input-group-text">
            <i class="bi bi-lock-fill"></i>
          </span>
          <input
            type="password"
            class="form-control"
            id="confirm_password"
            name="confirm_password"
            placeholder="Re-enter your password"
            required
            autocomplete="new-password"
            aria-required="true"
            minlength="8"
          >
        </div>
        <div class="invalid-feedback"></div>
      </div>

      <button
        type="submit"
        class="btn btn-accept"
        id="acceptButton"
        aria-label="Accept invitation and create account"
      >
        <span id="buttonText">
          <i class="bi bi-check-circle me-2"></i>
          Accept Invitation & Join
        </span>
        <span id="buttonSpinner" class="d-none">
          <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
          Creating your account...
        </span>
      </button>
    </form>

    <div class="text-center mt-4">
      <a href="/auth/login" class="text-decoration-none" style="color: #667eea;">
        <i class="bi bi-arrow-left me-1"></i>
        Already have an account? Sign in
      </a>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('acceptInviteForm');
      const button = document.getElementById('acceptButton');
      const buttonText = document.getElementById('buttonText');
      const buttonSpinner = document.getElementById('buttonSpinner');
      const password = document.getElementById('password');
      const confirmPassword = document.getElementById('confirm_password');

      // Form validation
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        // Reset validation states
        form.classList.remove('was-validated');
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));

        // Validate full name
        const fullName = document.getElementById('full_name');
        if (fullName.value.trim().length < 2) {
          fullName.classList.add('is-invalid');
          fullName.nextElementSibling.textContent = 'Please enter your full name (at least 2 characters)';
          fullName.focus();
          return;
        }

        // Validate password
        if (password.value.length < 8) {
          password.classList.add('is-invalid');
          password.parentElement.nextElementSibling.nextElementSibling.textContent = 'Password must be at least 8 characters';
          password.focus();
          return;
        }

        // Validate password match
        if (password.value !== confirmPassword.value) {
          confirmPassword.classList.add('is-invalid');
          confirmPassword.parentElement.nextElementSibling.textContent = 'Passwords do not match';
          confirmPassword.focus();
          return;
        }

        // Disable button and show spinner
        button.disabled = true;
        buttonText.classList.add('d-none');
        buttonSpinner.classList.remove('d-none');

        try {
          const formData = new FormData(form);
          const response = await fetch('/auth/accept-invite', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              token: formData.get('token'),
              full_name: formData.get('full_name'),
              password: formData.get('password')
            })
          });

          const data = await response.json();

          if (data.success) {
            // Show success message
            const successAlert = document.createElement('div');
            successAlert.className = 'alert alert-success';
            successAlert.innerHTML = '<i class="bi bi-check-circle me-2"></i>' + data.message;
            form.insertBefore(successAlert, form.firstChild);

            // Redirect after short delay
            setTimeout(() => {
              window.location.href = data.redirectTo || '/dashboard';
            }, 1500);
          } else {
            throw new Error(data.error || 'Failed to accept invitation');
          }
        } catch (error) {
          // Show error message
          const errorAlert = document.createElement('div');
          errorAlert.className = 'alert alert-danger';
          errorAlert.innerHTML = '<i class="bi bi-exclamation-triangle me-2"></i>' + error.message;
          form.insertBefore(errorAlert, form.firstChild);

          // Re-enable button
          button.disabled = false;
          buttonText.classList.remove('d-none');
          buttonSpinner.classList.add('d-none');
        }
      });

      // Real-time password matching validation
      confirmPassword.addEventListener('input', function() {
        if (this.value && this.value !== password.value) {
          this.classList.add('is-invalid');
          this.parentElement.nextElementSibling.textContent = 'Passwords do not match';
        } else {
          this.classList.remove('is-invalid');
        }
      });
    });
  </script>
</body>
</html>
