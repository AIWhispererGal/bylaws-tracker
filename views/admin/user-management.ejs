<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title || 'User Management' %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <style>
    .role-badge {
      font-size: 0.85rem;
      padding: 0.35rem 0.65rem;
    }
    .role-owner {
      background-color: #6f42c1;
      color: white;
    }
    .role-admin {
      background-color: #fd7e14;
      color: white;
    }
    .role-member {
      background-color: #0d6efd;
      color: white;
    }
    .role-viewer {
      background-color: #6c757d;
      color: white;
    }
    .user-inactive {
      opacity: 0.6;
    }
    .stat-card {
      border-left: 4px solid #0d6efd;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container-fluid">
      <a class="navbar-brand" href="/dashboard">
        <i class="bi bi-file-text"></i> Amendment Tracker
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item">
            <a class="nav-link" href="/dashboard">Dashboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/admin/users">Users</a>
          </li>
          <li class="nav-item">
            <span class="nav-link">
              <i class="bi bi-building"></i> <%= organizationName || 'Organization' %>
            </span>
          </li>
          <% if (typeof currentUser !== 'undefined' && currentUser) { %>
            <li class="nav-item">
              <span class="nav-link">
                <% if (currentUser.is_global_admin) { %>
                  <span class="badge bg-danger">
                    <i class="bi bi-shield-fill-check"></i> Global Admin
                  </span>
                <% } else if (currentUser.role === 'owner') { %>
                  <span class="badge bg-warning text-dark">
                    <i class="bi bi-star-fill"></i> Owner
                  </span>
                <% } else if (currentUser.role === 'admin') { %>
                  <span class="badge bg-warning text-dark">
                    <i class="bi bi-star-fill"></i> Admin
                  </span>
                <% } else if (currentUser.role === 'member') { %>
                  <span class="badge bg-success">
                    <i class="bi bi-person-check"></i> Member
                  </span>
                <% } else { %>
                  <span class="badge bg-info">
                    <i class="bi bi-eye"></i> Viewer
                  </span>
                <% } %>
              </span>
            </li>
          <% } %>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container mt-4">
    <!-- Header -->
    <div class="row mb-4">
      <div class="col-md-8">
        <h2><i class="bi bi-people-fill"></i> User Management</h2>
        <p class="text-muted">Manage users and roles for your organization</p>
      </div>
      <div class="col-md-4 text-end">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#inviteUserModal">
          <i class="bi bi-person-plus"></i> Invite User
        </button>
      </div>
    </div>

    <!-- User Limit Info -->
    <div class="row mb-4">
      <div class="col-md-12">
        <div class="card stat-card">
          <div class="card-body">
            <div class="row">
              <div class="col-md-3">
                <h5>Active Users</h5>
                <h2 class="mb-0" id="activeUserCount">-</h2>
              </div>
              <div class="col-md-3">
                <h5>User Limit</h5>
                <h2 class="mb-0" id="userLimit">-</h2>
              </div>
              <div class="col-md-3">
                <h5>Available Slots</h5>
                <h2 class="mb-0" id="availableSlots">-</h2>
              </div>
              <div class="col-md-3">
                <h5>Usage</h5>
                <div class="progress mt-2" style="height: 30px;">
                  <div class="progress-bar" id="userLimitProgressBar" role="progressbar" style="width: 0%">
                    <span id="userLimitPercentage">0%</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Users Table -->
    <div class="card">
      <div class="card-header">
        <h5 class="mb-0">Organization Users</h5>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-hover" id="usersTable">
            <thead>
              <tr>
                <th>User</th>
                <th>Role</th>
                <th>Status</th>
                <th>Joined</th>
                <th>Last Active</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="usersTableBody">
              <tr>
                <td colspan="6" class="text-center">
                  <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Invite User Modal -->
  <div class="modal fade" id="inviteUserModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Invite New User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="inviteUserForm">
            <div class="mb-3">
              <label for="inviteEmail" class="form-label">Email Address *</label>
              <input type="email" class="form-control" id="inviteEmail" required>
            </div>
            <div class="mb-3">
              <label for="inviteName" class="form-label">Name (optional)</label>
              <input type="text" class="form-control" id="inviteName">
            </div>
            <div class="mb-3">
              <label for="inviteRole" class="form-label">Role *</label>
              <select class="form-select" id="inviteRole" required>
                <option value="member" selected>Member</option>
                <option value="admin">Admin</option>
                <option value="viewer">Viewer</option>
                <option value="owner">Owner</option>
              </select>
              <div class="form-text">
                <strong>Owner:</strong> Full access<br>
                <strong>Admin:</strong> Can manage users and approve stages<br>
                <strong>Member:</strong> Can create suggestions and vote<br>
                <strong>Viewer:</strong> Read-only access
              </div>
            </div>
            <div class="alert alert-info">
              <i class="bi bi-info-circle"></i>
              An invitation email will be sent to the user with instructions to set up their account.
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="inviteUser()">
            <i class="bi bi-send"></i> Send Invitation
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Edit Role Modal -->
  <div class="modal fade" id="editRoleModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Change User Role</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="editRoleForm">
            <input type="hidden" id="editUserId">
            <div class="mb-3">
              <label class="form-label">User</label>
              <p class="fw-bold" id="editUserEmail"></p>
            </div>
            <div class="mb-3">
              <label for="editUserRole" class="form-label">New Role</label>
              <select class="form-select" id="editUserRole" required>
                <option value="member">Member</option>
                <option value="admin">Admin</option>
                <option value="viewer">Viewer</option>
                <option value="owner">Owner</option>
              </select>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="saveUserRole()">
            <i class="bi bi-save"></i> Save Changes
          </button>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Load users on page load
    document.addEventListener('DOMContentLoaded', function() {
      loadUsers();
    });

    // Load users from API
    async function loadUsers() {
      try {
        const response = await fetch('/api/users');
        const data = await response.json();

        if (!data.success) {
          throw new Error(data.error);
        }

        displayUsers(data.users);
        updateUserLimit(data.userLimit);
      } catch (error) {
        console.error('Error loading users:', error);
        document.getElementById('usersTableBody').innerHTML = `
          <tr>
            <td colspan="6" class="text-center text-danger">
              <i class="bi bi-exclamation-triangle"></i> Error loading users: ${error.message}
            </td>
          </tr>
        `;
      }
    }

    // Display users in table
    function displayUsers(users) {
      const tbody = document.getElementById('usersTableBody');

      if (users.length === 0) {
        tbody.innerHTML = `
          <tr>
            <td colspan="6" class="text-center text-muted">
              No users found. Invite your first user to get started.
            </td>
          </tr>
        `;
        return;
      }

      tbody.innerHTML = users.map(userOrg => {
        const user = userOrg.users;
        const rowClass = !userOrg.is_active ? 'user-inactive' : '';
        const roleClass = `role-${userOrg.role}`;

        return `
          <tr class="${rowClass}">
            <td>
              <div>
                <strong>${user.name || user.email}</strong>
                ${user.name ? `<br><small class="text-muted">${user.email}</small>` : ''}
              </div>
            </td>
            <td>
              <span class="badge role-badge ${roleClass}">${userOrg.role.toUpperCase()}</span>
            </td>
            <td>
              ${userOrg.is_active
                ? '<span class="badge bg-success">Active</span>'
                : '<span class="badge bg-secondary">Inactive</span>'}
            </td>
            <td>${new Date(userOrg.joined_at).toLocaleDateString()}</td>
            <td>${userOrg.last_active ? new Date(userOrg.last_active).toLocaleDateString() : 'Never'}</td>
            <td>
              <div class="btn-group btn-group-sm">
                <button class="btn btn-outline-primary" onclick="editUserRole('${user.id}', '${user.email}', '${userOrg.role}')">
                  <i class="bi bi-pencil"></i>
                </button>
                <button class="btn btn-outline-danger" onclick="removeUser('${user.id}', '${user.email}')">
                  <i class="bi bi-trash"></i>
                </button>
              </div>
            </td>
          </tr>
        `;
      }).join('');
    }

    // Update user limit display
    function updateUserLimit(limitInfo) {
      document.getElementById('activeUserCount').textContent = limitInfo.current;
      document.getElementById('userLimit').textContent = limitInfo.max;
      document.getElementById('availableSlots').textContent = limitInfo.available;

      const percentage = Math.round((limitInfo.current / limitInfo.max) * 100);
      document.getElementById('userLimitPercentage').textContent = percentage + '%';

      const progressBar = document.getElementById('userLimitProgressBar');
      progressBar.style.width = percentage + '%';

      if (percentage >= 90) {
        progressBar.classList.remove('bg-success', 'bg-warning');
        progressBar.classList.add('bg-danger');
      } else if (percentage >= 70) {
        progressBar.classList.remove('bg-success', 'bg-danger');
        progressBar.classList.add('bg-warning');
      } else {
        progressBar.classList.remove('bg-warning', 'bg-danger');
        progressBar.classList.add('bg-success');
      }
    }

    // Invite user
    async function inviteUser() {
      const email = document.getElementById('inviteEmail').value;
      const name = document.getElementById('inviteName').value;
      const role = document.getElementById('inviteRole').value;

      if (!email) {
        alert('Email is required');
        return;
      }

      try {
        const response = await fetch('/api/users/invite', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, name, role })
        });

        const data = await response.json();

        if (!data.success) {
          throw new Error(data.error);
        }

        alert(data.message);
        bootstrap.Modal.getInstance(document.getElementById('inviteUserModal')).hide();
        document.getElementById('inviteUserForm').reset();
        loadUsers();
      } catch (error) {
        alert('Error inviting user: ' + error.message);
      }
    }

    // Edit user role
    function editUserRole(userId, userEmail, currentRole) {
      document.getElementById('editUserId').value = userId;
      document.getElementById('editUserEmail').textContent = userEmail;
      document.getElementById('editUserRole').value = currentRole;

      new bootstrap.Modal(document.getElementById('editRoleModal')).show();
    }

    // Save user role
    async function saveUserRole() {
      const userId = document.getElementById('editUserId').value;
      const newRole = document.getElementById('editUserRole').value;

      try {
        const response = await fetch(`/api/users/${userId}/role`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ role: newRole })
        });

        const data = await response.json();

        if (!data.success) {
          throw new Error(data.error);
        }

        alert(data.message);
        bootstrap.Modal.getInstance(document.getElementById('editRoleModal')).hide();
        loadUsers();
      } catch (error) {
        alert('Error updating role: ' + error.message);
      }
    }

    // Remove user
    async function removeUser(userId, userEmail) {
      if (!confirm(`Are you sure you want to remove ${userEmail} from the organization?`)) {
        return;
      }

      try {
        const response = await fetch(`/api/users/${userId}`, {
          method: 'DELETE'
        });

        const data = await response.json();

        if (!data.success) {
          throw new Error(data.error);
        }

        alert(data.message);
        loadUsers();
      } catch (error) {
        alert('Error removing user: ' + error.message);
      }
    }
  </script>
</body>
</html>
