{
  "mountPoints": [
    {
      "prefix": "/setup",
      "file": "src/routes/setup.js",
      "description": "Initial organization setup wizard"
    },
    {
      "prefix": "/auth",
      "file": "src/routes/auth.js",
      "description": "Authentication and user management"
    },
    {
      "prefix": "/admin",
      "file": "src/routes/admin.js",
      "description": "Global admin dashboard for multi-org management"
    },
    {
      "prefix": "/dashboard",
      "file": "src/routes/dashboard.js",
      "description": "Main user dashboard (view)"
    },
    {
      "prefix": "/api/dashboard",
      "file": "src/routes/dashboard.js",
      "description": "Dashboard API endpoints"
    },
    {
      "prefix": "/api/users",
      "file": "src/routes/users.js",
      "description": "User management API"
    },
    {
      "prefix": "/api/approval",
      "file": "src/routes/approval.js",
      "description": "Approval workflow API"
    },
    {
      "prefix": "/api/workflow",
      "file": "src/routes/workflow.js",
      "description": "Workflow template management API"
    }
  ],
  "routes": [
    {
      "method": "GET",
      "path": "/",
      "file": "server.js",
      "implemented": true,
      "notes": "Landing page with login/register options or redirect to dashboard if authenticated"
    },
    {
      "method": "GET",
      "path": "/api/config",
      "file": "server.js",
      "implemented": true,
      "notes": "Returns APP_URL configuration"
    },
    {
      "method": "GET",
      "path": "/api/health",
      "file": "server.js",
      "implemented": true,
      "notes": "Health check endpoint for Render deployment"
    },
    {
      "method": "GET",
      "path": "/bylaws",
      "file": "server.js",
      "implemented": true,
      "notes": "Legacy bylaws amendment tracker view"
    },
    {
      "method": "GET",
      "path": "/bylaws/api/sections/:docId",
      "file": "server.js",
      "implemented": true,
      "notes": "Get all sections for a document (legacy route)"
    },
    {
      "method": "POST",
      "path": "/bylaws/api/initialize",
      "file": "server.js",
      "implemented": true,
      "notes": "Initialize document with parsed sections (legacy)"
    },
    {
      "method": "POST",
      "path": "/bylaws/api/sections/:sectionId/lock",
      "file": "server.js",
      "implemented": true,
      "notes": "Lock section(s) with selected suggestion (supports multi-section)"
    },
    {
      "method": "POST",
      "path": "/bylaws/api/sections/:sectionId/unlock",
      "file": "server.js",
      "implemented": true,
      "notes": "Unlock a section (legacy)"
    },
    {
      "method": "GET",
      "path": "/bylaws/api/export/committee",
      "file": "server.js",
      "implemented": true,
      "notes": "Export committee selections as JSON (legacy)"
    },
    {
      "method": "POST",
      "path": "/bylaws/api/suggestions",
      "file": "server.js",
      "implemented": true,
      "notes": "Create new suggestion (supports multi-section)"
    },
    {
      "method": "GET",
      "path": "/bylaws/api/sections/multiple/suggestions",
      "file": "server.js",
      "implemented": true,
      "notes": "Get suggestions for multiple sections"
    },
    {
      "method": "PUT",
      "path": "/bylaws/api/suggestions/:id",
      "file": "server.js",
      "implemented": true,
      "notes": "Update a suggestion (legacy)"
    },
    {
      "method": "DELETE",
      "path": "/bylaws/api/suggestions/:id",
      "file": "server.js",
      "implemented": true,
      "notes": "Delete a suggestion (legacy)"
    },
    {
      "method": "GET",
      "path": "/bylaws/api/sections/:sectionId/suggestions",
      "file": "server.js",
      "implemented": true,
      "notes": "Get suggestions for a section (legacy)"
    },
    {
      "method": "GET",
      "path": "/bylaws/api/export/board",
      "file": "server.js",
      "implemented": true,
      "notes": "Export board approvals as JSON (legacy)"
    },
    {
      "method": "GET",
      "path": "/setup",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Setup wizard welcome screen"
    },
    {
      "method": "GET",
      "path": "/setup/organization",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Organization info form"
    },
    {
      "method": "POST",
      "path": "/setup/organization",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Save organization info and create admin user with file upload support"
    },
    {
      "method": "GET",
      "path": "/setup/document-type",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Document structure selection"
    },
    {
      "method": "POST",
      "path": "/setup/document-type",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Save document structure configuration"
    },
    {
      "method": "GET",
      "path": "/setup/workflow",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Workflow configuration form"
    },
    {
      "method": "POST",
      "path": "/setup/workflow",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Save workflow configuration"
    },
    {
      "method": "GET",
      "path": "/setup/import",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Document import screen"
    },
    {
      "method": "POST",
      "path": "/setup/import",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Process document upload with file upload support"
    },
    {
      "method": "GET",
      "path": "/setup/processing",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Processing screen during setup"
    },
    {
      "method": "GET",
      "path": "/setup/status",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Check setup progress status"
    },
    {
      "method": "GET",
      "path": "/setup/success",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Success screen (redirects to dashboard with auto-login)"
    },
    {
      "method": "POST",
      "path": "/setup/clear-session",
      "file": "src/routes/setup.js",
      "implemented": true,
      "notes": "Clear setup session data"
    },
    {
      "method": "GET",
      "path": "/auth/register",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display registration page"
    },
    {
      "method": "POST",
      "path": "/auth/register",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Register new user with Supabase Auth"
    },
    {
      "method": "GET",
      "path": "/auth/login",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display login page"
    },
    {
      "method": "POST",
      "path": "/auth/login",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Authenticate user with Supabase"
    },
    {
      "method": "GET",
      "path": "/auth/logout",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Logout and redirect"
    },
    {
      "method": "POST",
      "path": "/auth/logout",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "API endpoint to logout user"
    },
    {
      "method": "GET",
      "path": "/auth/profile",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display user profile page"
    },
    {
      "method": "GET",
      "path": "/auth/session",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Return current session info and validate JWT"
    },
    {
      "method": "POST",
      "path": "/auth/invite-user",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Invite user to organization (enforces 50 user limit)"
    },
    {
      "method": "GET",
      "path": "/auth/accept-invite",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display invitation acceptance form"
    },
    {
      "method": "GET",
      "path": "/auth/accept-invitation",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Alias redirect to /auth/accept-invite"
    },
    {
      "method": "POST",
      "path": "/auth/accept-invitation",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Alias to /auth/accept-invite"
    },
    {
      "method": "POST",
      "path": "/auth/accept-invite",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Process invitation acceptance"
    },
    {
      "method": "GET",
      "path": "/auth/select",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Organization selection page (global admins see ALL orgs)"
    },
    {
      "method": "POST",
      "path": "/auth/select",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Set selected organization in session"
    },
    {
      "method": "GET",
      "path": "/auth/switch/:organizationId",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Quick organization switcher"
    },
    {
      "method": "GET",
      "path": "/auth/admin",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Admin mode toggle (global admins only)"
    },
    {
      "method": "GET",
      "path": "/auth/forgot-password",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display forgot password form"
    },
    {
      "method": "POST",
      "path": "/auth/forgot-password",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Send password reset email via Supabase"
    },
    {
      "method": "GET",
      "path": "/auth/reset-password",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Display password reset form"
    },
    {
      "method": "POST",
      "path": "/auth/reset-password",
      "file": "src/routes/auth.js",
      "implemented": true,
      "notes": "Update user password via Supabase"
    },
    {
      "method": "GET",
      "path": "/admin/users",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "User management page"
    },
    {
      "method": "GET",
      "path": "/admin/dashboard",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Global admin overview of all organizations"
    },
    {
      "method": "GET",
      "path": "/admin/organization",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Organization settings/configuration page"
    },
    {
      "method": "GET",
      "path": "/admin/organization/:id",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Detailed organization view"
    },
    {
      "method": "POST",
      "path": "/admin/organization/:id/delete",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Delete organization (requires confirmation)"
    },
    {
      "method": "GET",
      "path": "/admin/workflows",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Workflow template management"
    },
    {
      "method": "GET",
      "path": "/admin/workflows/create",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Create new workflow template"
    },
    {
      "method": "GET",
      "path": "/admin/workflows/:id/edit",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Edit existing workflow template"
    },
    {
      "method": "POST",
      "path": "/admin/documents/upload",
      "file": "src/routes/admin.js",
      "implemented": true,
      "notes": "Upload additional document after initial setup (with file upload)"
    },
    {
      "method": "GET",
      "path": "/dashboard",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Main dashboard view with My Tasks section"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/overview",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Organization statistics"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/documents",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "List documents with counts"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/sections",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "List sections with workflow status"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/suggestions",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Get suggestions (filtered by section_id or all pending)"
    },
    {
      "method": "POST",
      "path": "/api/dashboard/suggestions",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Create new suggestion with RLS support"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/activity",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Recent activity feed"
    },
    {
      "method": "GET",
      "path": "/api/dashboard/sections/:sectionId",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Get section details for diff comparison"
    },
    {
      "method": "GET",
      "path": "/dashboard/document/:documentId",
      "file": "src/routes/dashboard.js",
      "implemented": true,
      "notes": "Document viewer with sections and suggestions"
    },
    {
      "method": "GET",
      "path": "/api/users",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "List all users in current organization"
    },
    {
      "method": "GET",
      "path": "/api/users/:userId",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Get details for specific user"
    },
    {
      "method": "POST",
      "path": "/api/users/invite",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Invite new user to organization (enforces 50 user limit)"
    },
    {
      "method": "PUT",
      "path": "/api/users/:userId/role",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Update user's role in organization"
    },
    {
      "method": "PUT",
      "path": "/api/users/:userId/permissions",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Update user's custom permissions"
    },
    {
      "method": "DELETE",
      "path": "/api/users/:userId",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Remove user from organization (deactivate)"
    },
    {
      "method": "GET",
      "path": "/api/users/activity/log",
      "file": "src/routes/users.js",
      "implemented": true,
      "notes": "Get organization activity log"
    },
    {
      "method": "GET",
      "path": "/api/approval/workflow/:documentId",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Get workflow template and progress for document"
    },
    {
      "method": "GET",
      "path": "/api/approval/section/:sectionId/state",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Get current workflow state for specific section"
    },
    {
      "method": "POST",
      "path": "/api/approval/lock",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Lock section at specific workflow stage (atomic)"
    },
    {
      "method": "POST",
      "path": "/api/approval/approve",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Approve/reject section at workflow stage"
    },
    {
      "method": "POST",
      "path": "/api/approval/progress",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Progress section to next workflow stage"
    },
    {
      "method": "POST",
      "path": "/api/approval/version",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Create version snapshot of document at current state"
    },
    {
      "method": "GET",
      "path": "/api/approval/versions/:documentId",
      "file": "src/routes/approval.js",
      "implemented": true,
      "notes": "Get all versions for document"
    },
    {
      "method": "GET",
      "path": "/api/workflow/templates",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "List all workflow templates for current organization"
    },
    {
      "method": "POST",
      "path": "/api/workflow/templates",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Create new workflow template (admin only)"
    },
    {
      "method": "GET",
      "path": "/api/workflow/templates/:id",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Get workflow template details with stages"
    },
    {
      "method": "PUT",
      "path": "/api/workflow/templates/:id",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Update workflow template (admin only)"
    },
    {
      "method": "DELETE",
      "path": "/api/workflow/templates/:id",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Delete workflow template (admin only, not if in use)"
    },
    {
      "method": "POST",
      "path": "/api/workflow/templates/:id/set-default",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Set workflow template as default for organization"
    },
    {
      "method": "POST",
      "path": "/api/workflow/templates/:id/stages",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Add stage to workflow template"
    },
    {
      "method": "PUT",
      "path": "/api/workflow/templates/:id/stages/:stageId",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Update workflow stage"
    },
    {
      "method": "DELETE",
      "path": "/api/workflow/templates/:id/stages/:stageId",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Delete workflow stage (not if in use)"
    },
    {
      "method": "POST",
      "path": "/api/workflow/templates/:id/stages/reorder",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Reorder workflow stages"
    },
    {
      "method": "GET",
      "path": "/api/workflow/sections/:sectionId/state",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Get current workflow state for section"
    },
    {
      "method": "POST",
      "path": "/api/workflow/sections/:sectionId/approve",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Approve section at current workflow stage"
    },
    {
      "method": "POST",
      "path": "/api/workflow/sections/:sectionId/reject",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Reject section with reason"
    },
    {
      "method": "POST",
      "path": "/api/workflow/sections/:sectionId/advance",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Move section to next workflow stage"
    },
    {
      "method": "GET",
      "path": "/api/workflow/sections/:sectionId/history",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Get approval history for section"
    },
    {
      "method": "POST",
      "path": "/api/workflow/sections/:sectionId/lock",
      "file": "src/routes/workflow.js",
      "implemented": true,
      "notes": "Lock section with approved suggestion"
    }
  ],
  "summary": {
    "totalRoutes": 113,
    "totalMountPoints": 8,
    "routeFiles": 7,
    "implementationStatus": {
      "fullyImplemented": 113,
      "placeholders": 0
    },
    "categories": {
      "authentication": 19,
      "setup": 10,
      "admin": 9,
      "dashboard": 10,
      "users": 7,
      "approval": 8,
      "workflow": 18,
      "legacy_bylaws": 11,
      "system": 3
    }
  },
  "notes": [
    "All routes are fully implemented with proper authentication and authorization",
    "Legacy /bylaws routes exist for backward compatibility",
    "New multi-tenant architecture uses /dashboard and /api/* routes",
    "Global admin functionality accessible via /admin/* routes",
    "Setup wizard provides first-time configuration at /setup/*",
    "File uploads supported on: /setup/organization, /setup/import, /admin/documents/upload",
    "RLS security enforced on all database queries",
    "Session-based authentication with Supabase JWT integration",
    "50 user limit per organization enforced at invitation/registration",
    "Multi-section suggestion and locking support implemented"
  ]
}
