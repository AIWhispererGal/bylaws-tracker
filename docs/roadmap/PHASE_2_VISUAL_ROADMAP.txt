═══════════════════════════════════════════════════════════════════════════════
                    PHASE 2 ENHANCEMENTS - VISUAL ROADMAP
═══════════════════════════════════════════════════════════════════════════════

                              Timeline: 5-7 Days
                              Status: READY TO START
                              Risk: LOW

───────────────────────────────────────────────────────────────────────────────
                            THREE NEW FEATURES
───────────────────────────────────────────────────────────────────────────────

┌─────────────────────────────────────────────────────────────────────────────┐
│ FEATURE 1: Per-Document Numbering Schema Configuration                     │
│ ───────────────────────────────────────────────────────────────────────────│
│ WHAT: Customize 10-level hierarchy per document after upload               │
│ WHY:  Different document types need different numbering schemes            │
│ EFFORT: 3-4 days                                                            │
│                                                                              │
│ Database:                                                                    │
│   ALTER TABLE documents ADD COLUMN hierarchy_override JSONB;               │
│                                                                              │
│ UI Flow:                                                                     │
│   Document Detail → [Configure Hierarchy] → Editor Modal                   │
│   ├─ Load Template (4 pre-built options)                                   │
│   ├─ Detect from Document (auto-suggest)                                   │
│   ├─ Edit 10 Levels (drag-drop, dropdowns)                                 │
│   ├─ Live Preview                                                           │
│   └─ Save → hierarchy_override updated                                     │
│                                                                              │
│ Templates:                                                                   │
│   • Standard Bylaws (Article I → Section 1 → 1.1 → (a) → i...)            │
│   • Legal Document (Chapter I → Section 1 → Clause 1.1...)                │
│   • Policy Manual (Part I → Section 1 → Paragraph 1.1...)                 │
│   • Technical Standard (1 → 1.1 → 1.1.1 → 1.1.1.1...)                     │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ FEATURE 2: Suggestion Rejection with Workflow Stage Tracking               │
│ ───────────────────────────────────────────────────────────────────────────│
│ WHAT: Reject suggestions at workflow stage, hide from lock/approve         │
│ WHY:  Filter out irrelevant suggestions, maintain audit trail              │
│ EFFORT: 2-3 days                                                            │
│                                                                              │
│ Database:                                                                    │
│   ALTER TABLE suggestions                                                   │
│   ADD COLUMN rejected_at TIMESTAMP,                                         │
│   ADD COLUMN rejected_by UUID,                                              │
│   ADD COLUMN rejected_at_stage_id UUID;                                     │
│                                                                              │
│ UI Flow:                                                                     │
│   Suggestions List                                                           │
│   ├─ Tab: Active Suggestions (default)                                     │
│   ├─ Tab: Rejected Suggestions                                             │
│   └─ Tab: All Suggestions                                                  │
│                                                                              │
│   Admin Actions:                                                             │
│   ├─ [Reject] button on each suggestion                                    │
│   │   ├─ Records: timestamp, user, workflow stage                          │
│   │   └─ Moves to "Rejected" tab                                           │
│   └─ [Unreject] button (admins only)                                       │
│       └─ Restores suggestion to "Active"                                   │
│                                                                              │
│ Badge Display:                                                               │
│   "Rejected at Committee Review stage" (auto-generated)                    │
└─────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────────────────┐
│ FEATURE 3: Client-Side Section Reload After Lock-in                        │
│ ───────────────────────────────────────────────────────────────────────────│
│ WHAT: Auto-refresh section UI after lock WITHOUT page reload               │
│ WHY:  Immediate visual feedback, better UX                                 │
│ EFFORT: 1-2 days                                                            │
│                                                                              │
│ Database: NO CHANGES REQUIRED                                               │
│                                                                              │
│ Flow:                                                                        │
│   User selects suggestion → Clicks "Lock"                                  │
│   ↓                                                                          │
│   POST /api/workflow/sections/:id/lock                                     │
│   ↓                                                                          │
│   Enhanced Response:                                                         │
│   {                                                                          │
│     section: { is_locked, locked_text, ... },                              │
│     workflow: { status, canApprove, canLock, ... },                        │
│     suggestions: [ { status: 'selected', ... }, ... ]                      │
│   }                                                                          │
│   ↓                                                                          │
│   refreshSectionAfterLock(sectionId, data)                                 │
│   ├─ Update header badges (show "Locked" + "Amended")                     │
│   ├─ Update section content (show locked_text)                            │
│   ├─ Update action buttons (enable Approve, disable Lock)                 │
│   ├─ Update suggestions list (highlight selected)                         │
│   ├─ Show locked alert box                                                │
│   └─ Smooth scroll to section                                             │
│   ↓                                                                          │
│   Section displays locked state ✅                                         │
│   User can now approve without page reload ✅                              │
└─────────────────────────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────────
                         IMPLEMENTATION TIMELINE
───────────────────────────────────────────────────────────────────────────────

┌────────────┬──────────────────────────────────────────────────────────────┐
│ Day 1      │ DATABASE MIGRATIONS                                          │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Create migration 018 (hierarchy_override)                  │
│            │ • Create migration 019 (rejection tracking)                  │
│            │ • Apply to dev environment                                   │
│            │ • Verify constraints and indexes                             │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 2      │ BACKEND API ROUTES                                           │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Implement 4 hierarchy endpoints                            │
│            │ • Implement 3 rejection endpoints                            │
│            │ • Enhance lock endpoint response                             │
│            │ • Write integration tests                                    │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 3      │ FRONTEND FOUNDATION                                          │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Create hierarchy templates config (4 templates)            │
│            │ • Create hierarchy editor UI skeleton                        │
│            │ • Add suggestion filter tabs                                 │
│            │ • Add reject/unreject buttons                                │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 4      │ HIERARCHY EDITOR IMPLEMENTATION                              │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Drag-and-drop level editor                                 │
│            │ • Live preview with example numbering                        │
│            │ • Template loading                                           │
│            │ • "Detect from Document" feature                             │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 5      │ CLIENT-SIDE REFRESH                                          │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Implement refreshSectionAfterLock() function               │
│            │ • Add smooth animations                                      │
│            │ • Test badge updates                                         │
│            │ • Test suggestions list updates                              │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 6      │ TESTING & REFINEMENT                                         │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Run full test suite                                        │
│            │ • Fix bugs                                                   │
│            │ • UI/UX polish                                               │
│            │ • Performance testing                                        │
├────────────┼──────────────────────────────────────────────────────────────┤
│ Day 7      │ DOCUMENTATION & DEPLOYMENT                                   │
│ ───────────┼──────────────────────────────────────────────────────────────┤
│            │ • Update API documentation                                   │
│            │ • Create user guide                                          │
│            │ • Deploy to staging                                          │
│            │ • Deploy to production                                       │
└────────────┴──────────────────────────────────────────────────────────────┘

───────────────────────────────────────────────────────────────────────────────
                              FILE SUMMARY
───────────────────────────────────────────────────────────────────────────────

NEW FILES (10):
  Database:
    ✓ database/migrations/018_add_per_document_hierarchy.sql
    ✓ database/migrations/019_add_suggestion_rejection_tracking.sql

  Frontend:
    ✓ views/admin/document-hierarchy-editor.ejs
    ✓ public/js/hierarchy-editor.js
    ✓ public/css/hierarchy-editor.css

  Backend:
    ✓ src/config/hierarchyTemplates.js

  Tests:
    ✓ tests/integration/document-hierarchy.test.js
    ✓ tests/integration/suggestion-rejection.test.js

  Documentation:
    ✓ docs/roadmap/PHASE_2_ENHANCEMENTS_ROADMAP.md
    ✓ docs/roadmap/PHASE_2_QUICK_REFERENCE.md

MODIFIED FILES (5):
    ✓ src/routes/admin.js (+4 endpoints)
    ✓ src/routes/workflow.js (+3 endpoints, enhance 1)
    ✓ src/parsers/wordParser.js (check hierarchy_override)
    ✓ views/dashboard/document-viewer.ejs (tabs, buttons)
    ✓ public/js/workflow-actions.js (refresh functions)

───────────────────────────────────────────────────────────────────────────────
                           SUCCESS CRITERIA
───────────────────────────────────────────────────────────────────────────────

FEATURE 1: Per-Document Hierarchy
  □ Admins can open hierarchy editor from document page
  □ 4 pre-built templates load correctly
  □ Custom hierarchy saves to hierarchy_override
  □ Parser respects document-specific config
  □ Reset to org default works

FEATURE 2: Suggestion Rejection
  □ Admin can reject suggestions
  □ Rejection tracked with stage/timestamp/user
  □ Rejected suggestions appear in "Rejected" tab
  □ Rejected suggestions hidden from lock/approve
  □ Admin can unreject to restore

FEATURE 3: Section Refresh
  □ Lock triggers automatic section refresh
  □ Badges update (Locked, Amended)
  □ Section content shows locked_text
  □ Action buttons update (Approve enabled, Lock disabled)
  □ Suggestions list updates (selected highlighted)
  □ No page reload required

───────────────────────────────────────────────────────────────────────────────
                         DOCUMENTATION LINKS
───────────────────────────────────────────────────────────────────────────────

Full Implementation Guide:
  → docs/roadmap/PHASE_2_ENHANCEMENTS_ROADMAP.md (100+ pages)

Quick Reference:
  → docs/roadmap/PHASE_2_QUICK_REFERENCE.md (cheat sheet)

Session Summary:
  → docs/SESSION_2025-10-17_SUMMARY.md (requirements & decisions)

Executive Summary:
  → docs/roadmap/PHASE_2_EXECUTIVE_SUMMARY.md (high-level overview)

Related (Future):
  → docs/reports/P6_IMPLEMENTATION_ROADMAP.md (section editor, deferred)

───────────────────────────────────────────────────────────────────────────────
                            NEXT STEPS
───────────────────────────────────────────────────────────────────────────────

START IMPLEMENTATION:

  1. Create database migrations (Day 1):
     $ cd database/migrations
     $ touch 018_add_per_document_hierarchy.sql
     $ touch 019_add_suggestion_rejection_tracking.sql

  2. Run in Supabase SQL Editor (dev environment)

  3. Create hierarchy templates:
     $ touch src/config/hierarchyTemplates.js

  4. Begin backend implementation (Day 2)

───────────────────────────────────────────────────────────────────────────────

STATUS: ✅ READY FOR IMPLEMENTATION
RISK: 🟢 LOW (additive changes only)
CONFIDENCE: 🟢 HIGH (comprehensive planning)
BLOCKERS: ⚪ NONE (Phase 1 complete)

═══════════════════════════════════════════════════════════════════════════════
                         LET'S BUILD IT! 🚀
═══════════════════════════════════════════════════════════════════════════════
